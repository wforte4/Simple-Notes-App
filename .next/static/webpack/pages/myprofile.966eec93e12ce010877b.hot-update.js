webpackHotUpdate_N_E("pages/myprofile",{

/***/ "./components/elements.js":
/*!********************************!*\
  !*** ./components/elements.js ***!
  \********************************/
/*! exports provided: ParallaxBanner, Row, Col, getDate, Date, When, DropDown, ToggleSwitch, HamburgerEx */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ParallaxBanner\", function() { return ParallaxBanner; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Row\", function() { return Row; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Col\", function() { return Col; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getDate\", function() { return getDate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Date\", function() { return _Date; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"When\", function() { return When; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DropDown\", function() { return DropDown; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ToggleSwitch\", function() { return ToggleSwitch; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HamburgerEx\", function() { return HamburgerEx; });\n/* harmony import */ var _Users_williamforte_Canvas_SynapseFlash_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _Users_williamforte_Canvas_SynapseFlash_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _Users_williamforte_Canvas_SynapseFlash_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _Users_williamforte_Canvas_SynapseFlash_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _Users_williamforte_Canvas_SynapseFlash_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! styled-jsx/style */ \"./node_modules/styled-jsx/style.js\");\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(styled_jsx_style__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _components_hooks__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../components/hooks */ \"./components/hooks.js\");\n/* harmony import */ var _styles_theme__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../styles/theme */ \"./styles/theme.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/link */ \"./node_modules/next/link.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_10__);\n\n\n\n\n\n\n\nvar _jsxFileName = \"/Users/williamforte/Canvas/SynapseFlash/components/elements.js\",\n    _s = $RefreshSig$(),\n    _this2 = undefined;\n\n\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = Object(_Users_williamforte_Canvas_SynapseFlash_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = Object(_Users_williamforte_Canvas_SynapseFlash_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Object(_Users_williamforte_Canvas_SynapseFlash_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\n\nfunction ParallaxBanner(_ref) {\n  _s();\n\n  var children = _ref.children,\n      image = _ref.image,\n      height = _ref.height,\n      _ref$shadow = _ref.shadow,\n      shadow = _ref$shadow === void 0 ? false : _ref$shadow,\n      _ref$background = _ref.background,\n      background = _ref$background === void 0 ? 'white' : _ref$background;\n  var currentScroll = Object(_components_hooks__WEBPACK_IMPORTED_MODULE_8__[\"useScroll\"])();\n  return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__[\"jsxDEV\"])(\"div\", {\n    className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_6___default.a.dynamic([[\"951616453\", [height, background, shadow ? _styles_theme__WEBPACK_IMPORTED_MODULE_9__[\"default\"].sh.mat : null, -currentScroll.scrollY / 4]]]) + \" \" + 'banner',\n    children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__[\"jsxDEV\"])(\"img\", {\n      src: image,\n      className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_6___default.a.dynamic([[\"951616453\", [height, background, shadow ? _styles_theme__WEBPACK_IMPORTED_MODULE_9__[\"default\"].sh.mat : null, -currentScroll.scrollY / 4]]]) + \" \" + 'main_bg'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__[\"jsxDEV\"])(styled_jsx_style__WEBPACK_IMPORTED_MODULE_6___default.a, {\n      id: \"951616453\",\n      dynamic: [height, background, shadow ? _styles_theme__WEBPACK_IMPORTED_MODULE_9__[\"default\"].sh.mat : null, -currentScroll.scrollY / 4],\n      children: \".banner.__jsx-style-dynamic-selector{float:left;width:100%;height:\".concat(height, \";background:\").concat(background, \";overflow:hidden;position:relative;box-shadow:\").concat(shadow ? _styles_theme__WEBPACK_IMPORTED_MODULE_9__[\"default\"].sh.mat : null, \";}.main_bg.__jsx-style-dynamic-selector{position:absolute;top:50%;left:50%;width:100%;-webkit-transform:translate(-50%,-50%) translate3d(0,0,0);-ms-transform:translate(-50%,-50%) translate3d(0,0,0);transform:translate(-50%,-50%) translate3d(0,0,0);margin-top:\").concat(-currentScroll.scrollY / 4, \"px;-webkit-transition:all .1s ease;transition:all .1s ease;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy93aWxsaWFtZm9ydGUvQ2FudmFzL1N5bmFwc2VGbGFzaC9jb21wb25lbnRzL2VsZW1lbnRzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQVd3QixBQUdnQyxBQVNPLFdBUlAsT0FTSCxJQVI0QixJQVMzQixTQUNFLFdBQ3VDLFlBVlYsd0NBQ3hCLGdCQUNFLGtCQUNzQix3Q0FDNUMsb0NBTzhDLDBDQUNsQix3REFDNUIiLCJmaWxlIjoiL1VzZXJzL3dpbGxpYW1mb3J0ZS9DYW52YXMvU3luYXBzZUZsYXNoL2NvbXBvbmVudHMvZWxlbWVudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGlsZHJlbiB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgdXNlU2Nyb2xsIH0gZnJvbSAnLi4vY29tcG9uZW50cy9ob29rcydcbmltcG9ydCBUaGVtZSBmcm9tIFwiLi4vc3R5bGVzL3RoZW1lXCI7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnXG5cbmV4cG9ydCBmdW5jdGlvbiBQYXJhbGxheEJhbm5lcih7Y2hpbGRyZW4sIGltYWdlLCBoZWlnaHQsIHNoYWRvdyA9IGZhbHNlLCBiYWNrZ3JvdW5kID0gJ3doaXRlJ30pIHtcbiAgICBjb25zdCBjdXJyZW50U2Nyb2xsID0gdXNlU2Nyb2xsKCk7XG4gICAgcmV0dXJuIChcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9J2Jhbm5lcic+XG4gICAgICAgICAgICA8aW1nIGNsYXNzTmFtZT0nbWFpbl9iZycgc3JjPXtpbWFnZX0vPlxuICAgICAgICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAgICAgICAgIC5iYW5uZXIge1xuICAgICAgICAgICAgICAgICAgICBmbG9hdDogbGVmdDtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDogJHtoZWlnaHR9O1xuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAke2JhY2tncm91bmR9O1xuICAgICAgICAgICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICAgICAgICAgIGJveC1zaGFkb3c6ICR7c2hhZG93ID8gVGhlbWUuc2gubWF0OiBudWxsfTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLm1haW5fYmcge1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICAgICAgICAgIHRvcDogNTAlO1xuICAgICAgICAgICAgICAgICAgICBsZWZ0OiA1MCU7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLC01MCUpIHRyYW5zbGF0ZTNkKDAsMCwwKTtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogJHstY3VycmVudFNjcm9sbC5zY3JvbGxZIC8gNH1weDtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogYWxsIC4xcyBlYXNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGB9PC9zdHlsZT5cbiAgICAgICAgPC9kaXY+XG4gICAgKVxufVxuXG5leHBvcnQgY2xhc3MgUm93IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICByZW5kZXIgKCkge1xuICAgICAgICBjb25zdCBjb2xjb3VudCA9IFJlYWN0LkNoaWxkcmVuLmNvdW50KHRoaXMucHJvcHMuY2hpbGRyZW4pXG4gICAgICAgIGNvbnN0IG5ld2NoaWxkcmVuID0gUmVhY3QuQ2hpbGRyZW4ubWFwKHRoaXMucHJvcHMuY2hpbGRyZW4sIGNoaWxkID0+IHtcbiAgICAgICAgICAgIHJldHVybiBSZWFjdC5jbG9uZUVsZW1lbnQoY2hpbGQsIHt3aWR0aDogKDEwMCAvIGNvbGNvdW50KSwgaGVpZ2h0OiB0aGlzLnByb3BzLmhlaWdodH0pXG4gICAgICAgIH0pXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0ncm93Jz5cbiAgICAgICAgICAgICAgICB7bmV3Y2hpbGRyZW59XG4gICAgICAgICAgICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAgICAgICAgICAgICAucm93IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6ICR7dGhpcy5wcm9wcy5wYWRkaW5nID8gMTAwIC0gKHRoaXMucHJvcHMucGFkZGluZyAqIDIpOiAxMDB9JTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDAgJHt0aGlzLnByb3BzLnBhZGRpbmd9JTtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbjogJHt0aGlzLnByb3BzLm1hcmdpbn0gMDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICR7dGhpcy5wcm9wcy5iYWNrZ3JvdW5kfTtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDIwMHB4O1xuICAgICAgICAgICAgICAgICAgICAgICAgb3ZlcmZsb3c6ICR7dGhpcy5wcm9wcy5vdmVyZmxvd307XG4gICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6ICR7dGhpcy5wcm9wcy5oZWlnaHR9O1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjUwcHgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC5yb3cge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogYXV0bztcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGB9PC9zdHlsZT5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApICAgICAgICBcbiAgICB9XG59XG5cbmV4cG9ydCBjb25zdCBDb2wgPSAoe3BhZGRpbmcsIGNoaWxkcmVuLCBiYWNrZ3JvdW5kLCBtYXJnaW4sIHdpZHRoLCBoZWlnaHQsIG1pbmhlaWdodCwgbW9iaWxlRGlzcGxheX0pID0+IHtcbiAgICByZXR1cm4gKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nY29sJz5cbiAgICAgICAgICAgIHtjaGlsZHJlbn1cbiAgICAgICAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgICAgICAgICAuY29sIHtcbiAgICAgICAgICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6ICR7d2lkdGh9JTtcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogJHtwYWRkaW5nfTtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAke21hcmdpbn07XG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICR7YmFja2dyb3VuZH07XG4gICAgICAgICAgICAgICAgICAgIG1pbi1oZWlnaHQ6ICR7bWluaGVpZ2h0fTtcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAke2hlaWdodH07XG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDY1MHB4KSB7XG4gICAgICAgICAgICAgICAgICAgIC5jb2wge1xuICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiAke21vYmlsZURpc3BsYXkgPT0gZmFsc2UgPyAnbm9uZSc6ICdmbGV4J307XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBgfTwvc3R5bGU+XG4gICAgICAgIDwvZGl2PlxuICAgIClcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldERhdGUoZGF0ZXRpbWUpIHtcbiAgICBjb25zdCBmaXJzdCA9IGRhdGV0aW1lLnNwbGl0KCdUJylcbiAgICBjb25zdCBkYXRlID0gZmlyc3RbMF1cbiAgICBjb25zdCBzZWNvbmQgPSBmaXJzdFsxXS5zcGxpdCgnWicpXG4gICAgY29uc3QgdGltZSA9IHNlY29uZFswXVxuICAgIHJldHVybiB7IGRhdGUsIHRpbWUgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIERhdGUoZGF0ZXRpbWUpIHtcbiAgICBjb25zdCBkYXRlID0gZGF0ZXRpbWUuc3BsaXQoJ1QnKVxuICAgIGNvbnN0IHRpbWUgPSBkYXRlWzFdLnNwbGl0KCdaJylcbiAgICByZXR1cm4gZGF0ZVswXSwgdGltZVswXVxufVxuXG5leHBvcnQgY2xhc3MgV2hlbiBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgcmVuZGVyKCkge1xuICAgICAgICBpZih0aGlzLnByb3BzLmNvbmRpdGlvbiAhPT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMucHJvcHMuY2hpbGRyZW5cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBudWxsXG4gICAgICAgIH1cbiAgICB9XG59XG5cbmV4cG9ydCBjb25zdCBEcm9wRG93biA9ICh7d2lkdGgsIGhlaWdodCwgdG9wLCByaWdodCwgaXNBY3RpdmUsIGxpbmtzLCBjaGlsZHJlbiwgYmFja2dyb3VuZH0pID0+IHtcbiAgICByZXR1cm4gKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nZHJvcGRvd24nPlxuICAgICAgICAgICAge2NoaWxkcmVufVxuICAgICAgICAgICAge2xpbmtzICYmIGxpbmtzLm1hcCgobGluaywgaSkgPT4ge1xuICAgICAgICAgICAgICAgIGlmKGxpbmsuaHJlZikge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgICAgICAgPExpbmsga2V5PXtpfSBocmVmPXtsaW5rLmhyZWZ9PjxoMj57bGluay50aXRsZX08L2gyPjwvTGluaz5cbiAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgIH0gZWxzZSB7ICAgIFxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgICAgICAgPGgyIGtleT17aX0gb25DbGljaz17bGluay5hY3Rpb259PntsaW5rLnRpdGxlfTwvaDI+XG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KX1cbiAgICAgICAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgICAgICAgICAuZHJvcGRvd24ge1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IGFsbCAuM3MgZWFzZTtcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogJHtiYWNrZ3JvdW5kfTtcbiAgICAgICAgICAgICAgICAgICAgYm94LXNoYWRvdzogJHtUaGVtZS5zaC5ncmV5fTtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAke2lzQWN0aXZlID8gMTogMH07XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAke3dpZHRofTtcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAke2hlaWdodH07XG4gICAgICAgICAgICAgICAgICAgIHRvcDogJHt0b3B9O1xuICAgICAgICAgICAgICAgICAgICByaWdodDogJHtpc0FjdGl2ZSA/IHJpZ2h0OiAwfTtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKCR7aXNBY3RpdmUgPyAwOiAnMTUwJSd9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLmRyb3Bkb3duIGgyIHtcbiAgICAgICAgICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICAgICAgICAgIGZvbnQ6IDE2cHggJ1JvYm90byc7XG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiAke2JhY2tncm91bmQgPT09ICcjZmZmZmZmJyA/IFRoZW1lLmNvbG9ycy5kYXJrOiAnd2hpdGUnfTtcbiAgICAgICAgICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDEwcHggMDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLmRyb3Bkb3duIGgyOmhvdmVyIHtcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogcmdiYSgyMDAsMjAwLDIwMCwuNCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgYH08L3N0eWxlPlxuICAgICAgICA8L2Rpdj5cbiAgICApXG59XG5cbmV4cG9ydCBjb25zdCBUb2dnbGVTd2l0Y2ggPSAoe2FjdGl2ZSwgYWN0aXZlQ29sb3IsIG9uQ2xpY2ssIHRvcCwgcmlnaHQsIGZsb2F0TGVmdCA9IGZhbHNlfSkgPT4ge1xuICAgIHJldHVybiAoXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPSd0b2dnbGUnIG9uQ2xpY2s9e29uQ2xpY2t9PlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2NpcmNsZSc+PC9kaXY+XG4gICAgICAgICAgICA8c3R5bGUganN4PntgXG4gICAgICAgICAgICAgICAgLnRvZ2dsZSB7XG4gICAgICAgICAgICAgICAgICAgIGZsb2F0OiAke2Zsb2F0TGVmdCA/ICdsZWZ0JzogJyd9O1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogJHtmbG9hdExlZnQgPyAncmVsYXRpdmUnOiAnYWJzb2x1dGUnfTtcbiAgICAgICAgICAgICAgICAgICAgdG9wOiAke3RvcH07XG4gICAgICAgICAgICAgICAgICAgIHJpZ2h0OiAke3JpZ2h0fTtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogYWxsIC4zcyBlYXNlO1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogNDBweDtcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAyMHB4O1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAycHg7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICR7YWN0aXZlID8gVGhlbWUuY29sb3JzLmxpaWlnaHRwaW5rOiBUaGVtZS5jb2xvcnMucHVycGxlfTtcbiAgICAgICAgICAgICAgICAgICAgYm94LXNoYWRvdzogJHtUaGVtZS5zaC5oYXJkbWF0fTtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTJweDtcbiAgICAgICAgICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAuY2lyY2xlIHtcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgICAgICAgICAgICAgICAgIGJveC1zaGFkb3c6ICR7VGhlbWUuc2guaGFyZG1hdH07XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IGFsbCAuMXMgZWFzZS1pbi1vdXQ7XG4gICAgICAgICAgICAgICAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTdweDtcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAxN3B4O1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDJweDtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogJHthY3RpdmUgPyAnMnB4JzogJzUwJSd9O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGB9PC9zdHlsZT5cbiAgICAgICAgPC9kaXY+XG4gICAgKVxufVxuXG5leHBvcnQgY29uc3QgSGFtYnVyZ2VyRXggPSAoe2FjdGl2ZSwgYWN0aXZlQ29sb3IsIG9uQ2xpY2ssIHRvcCwgcmlnaHQsIGZsb2F0TGVmdCA9IGZhbHNlLCB0aGVtZUNvbG9yfSkgPT4ge1xuICAgIHJldHVybiAoXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPSd0b2dnbGUnIG9uQ2xpY2s9e29uQ2xpY2t9PlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2xpbmUgb25lJz48L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdsaW5lIHR3byc+PC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nbGluZSB0aHJlZSc+PC9kaXY+XG4gICAgICAgICAgICA8c3R5bGUganN4PntgXG4gICAgICAgICAgICAgICAgLnRvZ2dsZSB7XG4gICAgICAgICAgICAgICAgICAgIGZsb2F0OiAke2Zsb2F0TGVmdCA/ICdsZWZ0JzogJyd9O1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogJHtmbG9hdExlZnQgPyAncmVsYXRpdmUnOiAnYWJzb2x1dGUnfTtcbiAgICAgICAgICAgICAgICAgICAgdG9wOiAke3RvcH07XG4gICAgICAgICAgICAgICAgICAgIHJpZ2h0OiAke3JpZ2h0fTtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogYWxsIC4zcyBlYXNlO1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMzBweDtcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAzMHB4O1xuICAgICAgICAgICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogJHthY3RpdmUgPyAnY2VudGVyJzogJ3NwYWNlLWV2ZW5seSd9O1xuICAgICAgICAgICAgICAgICAgICBmbGV4LWZsb3c6IGNvbHVtbiB3cmFwO1xuICAgICAgICAgICAgICAgICAgICBhbGlnbi1jb250ZW50OiBzcGFjZS1ldmVubHk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC5saW5lIHtcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogJHt0aGVtZUNvbG9yID09PSAnI2ZmZmZmZicgPyBUaGVtZS5jb2xvcnMuZGFyazogJ3doaXRlJ307XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IGFsbCAuM3MgZWFzZTtcbiAgICAgICAgICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDFweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLm9uZSB7XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogJHthY3RpdmUgPyAncm90YXRlKDQ1ZGVnKSB0cmFuc2xhdGVZKDFweCknOiAnJ307XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC50d28ge1xuICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAke2FjdGl2ZSA/ICcwJzogJzEnfTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLnRocmVlIHtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOiAgJHthY3RpdmUgPyAncm90YXRlKC00NWRlZykgdHJhbnNsYXRlWSgtMXB4KSc6ICcnfTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBgfTwvc3R5bGU+XG4gICAgICAgIDwvZGl2PlxuICAgIClcbn1cblxuIl19 */\\n/*@ sourceURL=/Users/williamforte/Canvas/SynapseFlash/components/elements.js */\")\n    }, void 0, false, void 0, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ParallaxBanner, \"RjoYNUpcDJZakWlrHYzAPkW/9Vw=\", false, function () {\n  return [_components_hooks__WEBPACK_IMPORTED_MODULE_8__[\"useScroll\"]];\n});\n\n_c = ParallaxBanner;\nvar Row = /*#__PURE__*/function (_React$Component) {\n  Object(_Users_williamforte_Canvas_SynapseFlash_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(Row, _React$Component);\n\n  var _super = _createSuper(Row);\n\n  function Row() {\n    Object(_Users_williamforte_Canvas_SynapseFlash_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, Row);\n\n    return _super.apply(this, arguments);\n  }\n\n  Object(_Users_williamforte_Canvas_SynapseFlash_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(Row, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var colcount = react__WEBPACK_IMPORTED_MODULE_7___default.a.Children.count(this.props.children);\n      var newchildren = react__WEBPACK_IMPORTED_MODULE_7___default.a.Children.map(this.props.children, function (child) {\n        return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.cloneElement(child, {\n          width: 100 / colcount,\n          height: _this.props.height\n        });\n      });\n      return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__[\"jsxDEV\"])(\"div\", {\n        className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_6___default.a.dynamic([[\"734983430\", [this.props.padding ? 100 - this.props.padding * 2 : 100, this.props.padding, this.props.margin, this.props.background, this.props.overflow, this.props.height]]]) + \" \" + 'row',\n        children: [newchildren, /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__[\"jsxDEV\"])(styled_jsx_style__WEBPACK_IMPORTED_MODULE_6___default.a, {\n          id: \"734983430\",\n          dynamic: [this.props.padding ? 100 - this.props.padding * 2 : 100, this.props.padding, this.props.margin, this.props.background, this.props.overflow, this.props.height],\n          children: \".row.__jsx-style-dynamic-selector{float:left;width:\".concat(this.props.padding ? 100 - this.props.padding * 2 : 100, \"%;padding:0 \").concat(this.props.padding, \"%;margin:\").concat(this.props.margin, \" 0;background:\").concat(this.props.background, \";min-height:200px;overflow:\").concat(this.props.overflow, \";height:\").concat(this.props.height, \";}@media only screen and (max-width:650px){.row.__jsx-style-dynamic-selector{height:auto;}}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/williamforte/Canvas/SynapseFlash/components/elements.js */\")\n        }, void 0, false, void 0, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return Row;\n}(react__WEBPACK_IMPORTED_MODULE_7___default.a.Component);\nvar Col = function Col(_ref2) {\n  var padding = _ref2.padding,\n      children = _ref2.children,\n      background = _ref2.background,\n      margin = _ref2.margin,\n      width = _ref2.width,\n      height = _ref2.height,\n      minheight = _ref2.minheight,\n      mobileDisplay = _ref2.mobileDisplay;\n  return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__[\"jsxDEV\"])(\"div\", {\n    className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_6___default.a.dynamic([[\"1005238735\", [width, padding, margin, background, minheight, height, mobileDisplay == false ? 'none' : 'flex']]]) + \" \" + 'col',\n    children: [children, /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__[\"jsxDEV\"])(styled_jsx_style__WEBPACK_IMPORTED_MODULE_6___default.a, {\n      id: \"1005238735\",\n      dynamic: [width, padding, margin, background, minheight, height, mobileDisplay == false ? 'none' : 'flex'],\n      children: \".col.__jsx-style-dynamic-selector{float:left;position:relative;width:\".concat(width, \"%;padding:\").concat(padding, \";margin:\").concat(margin, \";background:\").concat(background, \";min-height:\").concat(minheight, \";height:\").concat(height, \";display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}@media only screen and (max-width:650px){.col.__jsx-style-dynamic-selector{width:100%;display:\").concat(mobileDisplay == false ? 'none' : 'flex', \";}}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/williamforte/Canvas/SynapseFlash/components/elements.js */\")\n    }, void 0, false, void 0, _this2)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, _this2);\n};\n_c2 = Col;\nfunction getDate(datetime) {\n  var first = datetime.split('T');\n  var date = first[0];\n  var second = first[1].split('Z');\n  var time = second[0];\n  return {\n    date: date,\n    time: time\n  };\n}\n\nfunction _Date(datetime) {\n  var date = datetime.split('T');\n  var time = date[1].split('Z');\n  return date[0], time[0];\n}\n\n\nvar When = /*#__PURE__*/function (_React$Component2) {\n  Object(_Users_williamforte_Canvas_SynapseFlash_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(When, _React$Component2);\n\n  var _super2 = _createSuper(When);\n\n  function When() {\n    Object(_Users_williamforte_Canvas_SynapseFlash_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, When);\n\n    return _super2.apply(this, arguments);\n  }\n\n  Object(_Users_williamforte_Canvas_SynapseFlash_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(When, [{\n    key: \"render\",\n    value: function render() {\n      if (this.props.condition !== null) {\n        return this.props.children;\n      } else {\n        return null;\n      }\n    }\n  }]);\n\n  return When;\n}(react__WEBPACK_IMPORTED_MODULE_7___default.a.Component);\nvar DropDown = function DropDown(_ref3) {\n  var width = _ref3.width,\n      height = _ref3.height,\n      top = _ref3.top,\n      right = _ref3.right,\n      isActive = _ref3.isActive,\n      links = _ref3.links,\n      children = _ref3.children,\n      background = _ref3.background;\n  return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__[\"jsxDEV\"])(\"div\", {\n    className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_6___default.a.dynamic([[\"2315560934\", [background, _styles_theme__WEBPACK_IMPORTED_MODULE_9__[\"default\"].sh.grey, isActive ? 1 : 0, width, height, top, isActive ? right : 0, isActive ? 0 : '150%', background === '#ffffff' ? _styles_theme__WEBPACK_IMPORTED_MODULE_9__[\"default\"].colors.dark : 'white']]]) + \" \" + 'dropdown',\n    children: [children, links && links.map(function (link, i) {\n      if (link.href) {\n        return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__[\"jsxDEV\"])(next_link__WEBPACK_IMPORTED_MODULE_10___default.a, {\n          href: link.href,\n          children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__[\"jsxDEV\"])(\"h2\", {\n            className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_6___default.a.dynamic([[\"2315560934\", [background, _styles_theme__WEBPACK_IMPORTED_MODULE_9__[\"default\"].sh.grey, isActive ? 1 : 0, width, height, top, isActive ? right : 0, isActive ? 0 : '150%', background === '#ffffff' ? _styles_theme__WEBPACK_IMPORTED_MODULE_9__[\"default\"].colors.dark : 'white']]]),\n            children: link.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 56\n          }, _this2)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }, _this2);\n      } else {\n        return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__[\"jsxDEV\"])(\"h2\", {\n          onClick: link.action,\n          className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_6___default.a.dynamic([[\"2315560934\", [background, _styles_theme__WEBPACK_IMPORTED_MODULE_9__[\"default\"].sh.grey, isActive ? 1 : 0, width, height, top, isActive ? right : 0, isActive ? 0 : '150%', background === '#ffffff' ? _styles_theme__WEBPACK_IMPORTED_MODULE_9__[\"default\"].colors.dark : 'white']]]),\n          children: link.title\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 25\n        }, _this2);\n      }\n    }), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__[\"jsxDEV\"])(styled_jsx_style__WEBPACK_IMPORTED_MODULE_6___default.a, {\n      id: \"2315560934\",\n      dynamic: [background, _styles_theme__WEBPACK_IMPORTED_MODULE_9__[\"default\"].sh.grey, isActive ? 1 : 0, width, height, top, isActive ? right : 0, isActive ? 0 : '150%', background === '#ffffff' ? _styles_theme__WEBPACK_IMPORTED_MODULE_9__[\"default\"].colors.dark : 'white'],\n      children: \".dropdown.__jsx-style-dynamic-selector{position:absolute;-webkit-transition:all .3s ease;transition:all .3s ease;background:\".concat(background, \";box-shadow:\").concat(_styles_theme__WEBPACK_IMPORTED_MODULE_9__[\"default\"].sh.grey, \";border-radius:4px;opacity:\").concat(isActive ? 1 : 0, \";width:\").concat(width, \";height:\").concat(height, \";top:\").concat(top, \";right:\").concat(isActive ? right : 0, \";-webkit-transform:translateX(\").concat(isActive ? 0 : '150%', \");-ms-transform:translateX(\").concat(isActive ? 0 : '150%', \");transform:translateX(\").concat(isActive ? 0 : '150%', \");}.dropdown.__jsx-style-dynamic-selector h2.__jsx-style-dynamic-selector{float:left;width:100%;text-align:center;font:16px 'Roboto';color:\").concat(background === '#ffffff' ? _styles_theme__WEBPACK_IMPORTED_MODULE_9__[\"default\"].colors.dark : 'white', \";cursor:pointer;margin:0;padding:10px 0;}.dropdown.__jsx-style-dynamic-selector h2.__jsx-style-dynamic-selector:hover{background:rgba(200,200,200,.4);}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/williamforte/Canvas/SynapseFlash/components/elements.js */\")\n    }, void 0, false, void 0, _this2)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 9\n  }, _this2);\n};\n_c3 = DropDown;\nvar ToggleSwitch = function ToggleSwitch(_ref4) {\n  var active = _ref4.active,\n      activeColor = _ref4.activeColor,\n      onClick = _ref4.onClick,\n      top = _ref4.top,\n      right = _ref4.right,\n      _ref4$floatLeft = _ref4.floatLeft,\n      floatLeft = _ref4$floatLeft === void 0 ? false : _ref4$floatLeft;\n  return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__[\"jsxDEV\"])(\"div\", {\n    onClick: onClick,\n    className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_6___default.a.dynamic([[\"3456271855\", [floatLeft ? 'left' : '', floatLeft ? 'relative' : 'absolute', top, right, active ? _styles_theme__WEBPACK_IMPORTED_MODULE_9__[\"default\"].colors.liiightpink : _styles_theme__WEBPACK_IMPORTED_MODULE_9__[\"default\"].colors.purple, _styles_theme__WEBPACK_IMPORTED_MODULE_9__[\"default\"].sh.hardmat, _styles_theme__WEBPACK_IMPORTED_MODULE_9__[\"default\"].sh.hardmat, active ? '2px' : '50%']]]) + \" \" + 'toggle',\n    children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__[\"jsxDEV\"])(\"div\", {\n      className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_6___default.a.dynamic([[\"3456271855\", [floatLeft ? 'left' : '', floatLeft ? 'relative' : 'absolute', top, right, active ? _styles_theme__WEBPACK_IMPORTED_MODULE_9__[\"default\"].colors.liiightpink : _styles_theme__WEBPACK_IMPORTED_MODULE_9__[\"default\"].colors.purple, _styles_theme__WEBPACK_IMPORTED_MODULE_9__[\"default\"].sh.hardmat, _styles_theme__WEBPACK_IMPORTED_MODULE_9__[\"default\"].sh.hardmat, active ? '2px' : '50%']]]) + \" \" + 'circle'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, _this2), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__[\"jsxDEV\"])(styled_jsx_style__WEBPACK_IMPORTED_MODULE_6___default.a, {\n      id: \"3456271855\",\n      dynamic: [floatLeft ? 'left' : '', floatLeft ? 'relative' : 'absolute', top, right, active ? _styles_theme__WEBPACK_IMPORTED_MODULE_9__[\"default\"].colors.liiightpink : _styles_theme__WEBPACK_IMPORTED_MODULE_9__[\"default\"].colors.purple, _styles_theme__WEBPACK_IMPORTED_MODULE_9__[\"default\"].sh.hardmat, _styles_theme__WEBPACK_IMPORTED_MODULE_9__[\"default\"].sh.hardmat, active ? '2px' : '50%'],\n      children: \".toggle.__jsx-style-dynamic-selector{float:\".concat(floatLeft ? 'left' : '', \";position:\").concat(floatLeft ? 'relative' : 'absolute', \";top:\").concat(top, \";right:\").concat(right, \";-webkit-transition:all .3s ease;transition:all .3s ease;width:40px;height:20px;padding:2px;background:\").concat(active ? _styles_theme__WEBPACK_IMPORTED_MODULE_9__[\"default\"].colors.liiightpink : _styles_theme__WEBPACK_IMPORTED_MODULE_9__[\"default\"].colors.purple, \";box-shadow:\").concat(_styles_theme__WEBPACK_IMPORTED_MODULE_9__[\"default\"].sh.hardmat, \";border-radius:12px;cursor:pointer;}.circle.__jsx-style-dynamic-selector{background:white;box-shadow:\").concat(_styles_theme__WEBPACK_IMPORTED_MODULE_9__[\"default\"].sh.hardmat, \";-webkit-transition:all .1s ease-in-out;transition:all .1s ease-in-out;float:left;width:17px;height:17px;margin:2px;border-radius:50%;margin-left:\").concat(active ? '2px' : '50%', \";}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/williamforte/Canvas/SynapseFlash/components/elements.js */\")\n    }, void 0, false, void 0, _this2)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 9\n  }, _this2);\n};\n_c4 = ToggleSwitch;\nvar HamburgerEx = function HamburgerEx(_ref5) {\n  var active = _ref5.active,\n      activeColor = _ref5.activeColor,\n      onClick = _ref5.onClick,\n      top = _ref5.top,\n      right = _ref5.right,\n      _ref5$floatLeft = _ref5.floatLeft,\n      floatLeft = _ref5$floatLeft === void 0 ? false : _ref5$floatLeft,\n      themeColor = _ref5.themeColor;\n  return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__[\"jsxDEV\"])(\"div\", {\n    onClick: onClick,\n    className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_6___default.a.dynamic([[\"16142594\", [floatLeft ? 'left' : '', floatLeft ? 'relative' : 'absolute', top, right, active ? 'center' : 'space-evenly', themeColor === '#ffffff' ? _styles_theme__WEBPACK_IMPORTED_MODULE_9__[\"default\"].colors.dark : 'white', active ? 'rotate(45deg) translateY(1px)' : '', active ? '0' : '1', active ? 'rotate(-45deg) translateY(-1px)' : '']]]) + \" \" + 'toggle',\n    children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__[\"jsxDEV\"])(\"div\", {\n      className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_6___default.a.dynamic([[\"16142594\", [floatLeft ? 'left' : '', floatLeft ? 'relative' : 'absolute', top, right, active ? 'center' : 'space-evenly', themeColor === '#ffffff' ? _styles_theme__WEBPACK_IMPORTED_MODULE_9__[\"default\"].colors.dark : 'white', active ? 'rotate(45deg) translateY(1px)' : '', active ? '0' : '1', active ? 'rotate(-45deg) translateY(-1px)' : '']]]) + \" \" + 'line one'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }, _this2), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__[\"jsxDEV\"])(\"div\", {\n      className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_6___default.a.dynamic([[\"16142594\", [floatLeft ? 'left' : '', floatLeft ? 'relative' : 'absolute', top, right, active ? 'center' : 'space-evenly', themeColor === '#ffffff' ? _styles_theme__WEBPACK_IMPORTED_MODULE_9__[\"default\"].colors.dark : 'white', active ? 'rotate(45deg) translateY(1px)' : '', active ? '0' : '1', active ? 'rotate(-45deg) translateY(-1px)' : '']]]) + \" \" + 'line two'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }, _this2), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__[\"jsxDEV\"])(\"div\", {\n      className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_6___default.a.dynamic([[\"16142594\", [floatLeft ? 'left' : '', floatLeft ? 'relative' : 'absolute', top, right, active ? 'center' : 'space-evenly', themeColor === '#ffffff' ? _styles_theme__WEBPACK_IMPORTED_MODULE_9__[\"default\"].colors.dark : 'white', active ? 'rotate(45deg) translateY(1px)' : '', active ? '0' : '1', active ? 'rotate(-45deg) translateY(-1px)' : '']]]) + \" \" + 'line three'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }, _this2), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__[\"jsxDEV\"])(styled_jsx_style__WEBPACK_IMPORTED_MODULE_6___default.a, {\n      id: \"16142594\",\n      dynamic: [floatLeft ? 'left' : '', floatLeft ? 'relative' : 'absolute', top, right, active ? 'center' : 'space-evenly', themeColor === '#ffffff' ? _styles_theme__WEBPACK_IMPORTED_MODULE_9__[\"default\"].colors.dark : 'white', active ? 'rotate(45deg) translateY(1px)' : '', active ? '0' : '1', active ? 'rotate(-45deg) translateY(-1px)' : ''],\n      children: \".toggle.__jsx-style-dynamic-selector{float:\".concat(floatLeft ? 'left' : '', \";position:\").concat(floatLeft ? 'relative' : 'absolute', \";top:\").concat(top, \";right:\").concat(right, \";-webkit-transition:all .3s ease;transition:all .3s ease;width:30px;height:30px;cursor:pointer;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:\").concat(active ? 'center' : 'space-evenly', \";-webkit-justify-content:\").concat(active ? 'center' : 'space-evenly', \";-ms-flex-pack:\").concat(active ? 'center' : 'space-evenly', \";justify-content:\").concat(active ? 'center' : 'space-evenly', \";-webkit-flex-flow:column wrap;-ms-flex-flow:column wrap;flex-flow:column wrap;-webkit-align-content:space-evenly;-ms-flex-line-pack:space-evenly;align-content:space-evenly;}.line.__jsx-style-dynamic-selector{background:\").concat(themeColor === '#ffffff' ? _styles_theme__WEBPACK_IMPORTED_MODULE_9__[\"default\"].colors.dark : 'white', \";-webkit-transition:all .3s ease;transition:all .3s ease;float:left;width:100%;height:1px;}.one.__jsx-style-dynamic-selector{-webkit-transform:\").concat(active ? 'rotate(45deg) translateY(1px)' : '', \";-ms-transform:\").concat(active ? 'rotate(45deg) translateY(1px)' : '', \";transform:\").concat(active ? 'rotate(45deg) translateY(1px)' : '', \";}.two.__jsx-style-dynamic-selector{opacity:\").concat(active ? '0' : '1', \";}.three.__jsx-style-dynamic-selector{-webkit-transform:\").concat(active ? 'rotate(-45deg) translateY(-1px)' : '', \";-ms-transform:\").concat(active ? 'rotate(-45deg) translateY(-1px)' : '', \";transform:\").concat(active ? 'rotate(-45deg) translateY(-1px)' : '', \";}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/williamforte/Canvas/SynapseFlash/components/elements.js */\")\n    }, void 0, false, void 0, _this2)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 9\n  }, _this2);\n};\n_c5 = HamburgerEx;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"ParallaxBanner\");\n$RefreshReg$(_c2, \"Col\");\n$RefreshReg$(_c3, \"DropDown\");\n$RefreshReg$(_c4, \"ToggleSwitch\");\n$RefreshReg$(_c5, \"HamburgerEx\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/elements.js\n");

/***/ })

})