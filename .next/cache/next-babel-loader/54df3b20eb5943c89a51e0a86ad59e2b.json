{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/williamforte/Canvas/SynapseFlash/pages/_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect } from 'react';\nimport App from 'next/app';\nimport Layout from '../components/layout';\nimport { Provider } from \"react-redux\";\nimport { createWrapper } from 'next-redux-wrapper';\nimport store from \"../store/store\";\nimport { useSelector } from 'react-redux';\nimport Router, { useRouter } from 'next/router';\nimport { useState } from 'react';\nimport Theme from '../styles/theme';\n\nfunction MyApp({\n  Component,\n  pageProps,\n  router\n}) {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    profile\n  } = useSelector(state => state.post);\n  const {\n    0: userProfile,\n    1: setProfile\n  } = useState(profile);\n  const {\n    0: themeColor,\n    1: setTheme\n  } = useState(userProfile ? userProfile.userTheme == 'Light' ? '#ffffff' : Theme.colors.dark : '#ffffff');\n  Router.events.on('routeChangeStart', () => setLoading(true));\n  Router.events.on('routeChangeComplete', () => setLoading(false));\n  Router.events.on('routeChangeError', () => setLoading(false)); // Sync Profile with redux \n\n  useEffect(() => {\n    setTheme(userProfile ? userProfile.userTheme == 'Light' ? '#ffffff' : Theme.colors.dark : '#ffffff');\n    setProfile(profile);\n  }, [profile]);\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      profile: userProfile,\n      themeColor: themeColor,\n      setTheme: setTheme,\n      router: router,\n      children: /*#__PURE__*/_jsxDEV(Component, _objectSpread({\n        themeColor: themeColor\n      }, pageProps), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\nconst makestore = () => store;\n\nconst wrapper = createWrapper(makestore);\nexport default wrapper.withRedux(MyApp);","map":{"version":3,"sources":["/Users/williamforte/Canvas/SynapseFlash/pages/_app.js"],"names":["React","useEffect","App","Layout","Provider","createWrapper","store","useSelector","Router","useRouter","useState","Theme","MyApp","Component","pageProps","router","loading","setLoading","profile","state","post","userProfile","setProfile","themeColor","setTheme","userTheme","colors","dark","events","on","makestore","wrapper","withRedux"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,IAAiBC,SAAjB,QAAkC,aAAlC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,SAAb;AAAwBC,EAAAA;AAAxB,CAAf,EAAgD;AAC9C,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAACQ,IAAAA;AAAD,MAAYX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAA7B;AACA,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAA4BZ,QAAQ,CAACQ,OAAD,CAA1C;AACA,QAAM;AAAA,OAACK,UAAD;AAAA,OAAaC;AAAb,MAAyBd,QAAQ,CAACW,WAAW,GAAGA,WAAW,CAACI,SAAZ,IAAyB,OAAzB,GAAmC,SAAnC,GAA8Cd,KAAK,CAACe,MAAN,CAAaC,IAA9D,GAAoE,SAAhF,CAAvC;AACAnB,EAAAA,MAAM,CAACoB,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqC,MAAMZ,UAAU,CAAC,IAAD,CAArD;AACAT,EAAAA,MAAM,CAACoB,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwC,MAAMZ,UAAU,CAAC,KAAD,CAAxD;AACAT,EAAAA,MAAM,CAACoB,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqC,MAAKZ,UAAU,CAAC,KAAD,CAApD,EAP8C,CAS9C;;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACduB,IAAAA,QAAQ,CAACH,WAAW,GAAGA,WAAW,CAACI,SAAZ,IAAyB,OAAzB,GAAmC,SAAnC,GAA8Cd,KAAK,CAACe,MAAN,CAAaC,IAA9D,GAAoE,SAAhF,CAAR;AACAL,IAAAA,UAAU,CAACJ,OAAD,CAAV;AACD,GAHQ,EAGN,CAACA,OAAD,CAHM,CAAT;AAKA,sBACE,QAAC,QAAD;AAAU,IAAA,KAAK,EAAEZ,KAAjB;AAAA,2BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEe,WAAjB;AAA8B,MAAA,UAAU,EAAEE,UAA1C;AAAsD,MAAA,QAAQ,EAAEC,QAAhE;AAA0E,MAAA,MAAM,EAAET,MAAlF;AAAA,6BACE,QAAC,SAAD;AAAW,QAAA,UAAU,EAAEQ;AAAvB,SAAuCT,SAAvC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;AAED,MAAMgB,SAAS,GAAG,MAAKxB,KAAvB;;AACA,MAAMyB,OAAO,GAAG1B,aAAa,CAACyB,SAAD,CAA7B;AAEA,eAAeC,OAAO,CAACC,SAAR,CAAkBpB,KAAlB,CAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport App from 'next/app'\nimport Layout from '../components/layout'\nimport { Provider } from \"react-redux\";\nimport { createWrapper } from 'next-redux-wrapper'\nimport store from \"../store/store\";\nimport { useSelector } from 'react-redux';\nimport Router, { useRouter } from 'next/router'\nimport { useState } from 'react';\nimport Theme from '../styles/theme';\n\nfunction MyApp({ Component, pageProps, router}) {\n  const [loading, setLoading] = useState(false)\n  const {profile} = useSelector(state => state.post)\n  const [userProfile, setProfile] = useState(profile)\n  const [themeColor, setTheme] = useState(userProfile ? userProfile.userTheme == 'Light' ? '#ffffff': Theme.colors.dark: '#ffffff')\n  Router.events.on('routeChangeStart', () => setLoading(true))\n  Router.events.on('routeChangeComplete', () => setLoading(false))\n  Router.events.on('routeChangeError', ()=> setLoading(false))\n\n  // Sync Profile with redux \n  \n  useEffect(() => {\n    setTheme(userProfile ? userProfile.userTheme == 'Light' ? '#ffffff': Theme.colors.dark: '#ffffff')\n    setProfile(profile)\n  }, [profile])\n\n  return (\n    <Provider store={store}>\n      <Layout profile={userProfile} themeColor={themeColor} setTheme={setTheme} router={router}>\n        <Component themeColor={themeColor} {...pageProps}></Component>\n      </Layout>\n    </Provider>\n  )\n}\n\nconst makestore = ()=> store;\nconst wrapper = createWrapper(makestore)\n\nexport default wrapper.withRedux(MyApp)"]},"metadata":{},"sourceType":"module"}