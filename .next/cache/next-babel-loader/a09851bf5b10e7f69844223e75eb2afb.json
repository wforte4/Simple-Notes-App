{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _JSXStyle from \"styled-jsx/style\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Theme from '../styles/theme';\nimport { uploadThought } from '../services/thoughtservice';\nimport { fetchThoughts } from \"../store/actions/postAction\";\nimport Link from 'next/link';\n\nfunction Dashboard({\n  themeColor\n}) {\n  const {\n    profile,\n    auth,\n    thoughts\n  } = useSelector(state => state.post);\n  const dispatch = useDispatch();\n  const {\n    0: inputs,\n    1: setInputs\n  } = useState({\n    thought: '',\n    user: profile,\n    auth: auth\n  });\n  useEffect(() => {\n    dispatch(fetchThoughts(profile.email, auth));\n  }, []);\n\n  const handleType = e => {\n    e.persist();\n    setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const uploadNewThought = async e => {\n    e.preventDefault();\n    setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n      thought: ''\n    }));\n    const newThought = await uploadThought(inputs.thought, profile.email, \"normal\", auth);\n    if (newThought) console.log(newThought);\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: _JSXStyle.dynamic([[\"1090097970\", [themeColor === '#ffffff' ? Theme.colors.dark : 'white', Theme.sh.mat, Theme.font.style]]]) + \" \" + 'dash',\n    children: [/*#__PURE__*/_jsx(Link, {\n      href: \"/\",\n      children: /*#__PURE__*/_jsx(\"div\", {\n        className: _JSXStyle.dynamic([[\"1090097970\", [themeColor === '#ffffff' ? Theme.colors.dark : 'white', Theme.sh.mat, Theme.font.style]]]) + \" \" + 'link',\n        children: \"Back to home\"\n      })\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: _JSXStyle.dynamic([[\"1090097970\", [themeColor === '#ffffff' ? Theme.colors.dark : 'white', Theme.sh.mat, Theme.font.style]]]) + \" \" + 'uploadThought',\n      children: /*#__PURE__*/_jsxs(\"form\", {\n        onSubmit: uploadNewThought,\n        className: _JSXStyle.dynamic([[\"1090097970\", [themeColor === '#ffffff' ? Theme.colors.dark : 'white', Theme.sh.mat, Theme.font.style]]]),\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          className: _JSXStyle.dynamic([[\"1090097970\", [themeColor === '#ffffff' ? Theme.colors.dark : 'white', Theme.sh.mat, Theme.font.style]]]),\n          children: \"Start Thinking\"\n        }), /*#__PURE__*/_jsx(\"img\", {\n          src: \"/think.png\",\n          className: _JSXStyle.dynamic([[\"1090097970\", [themeColor === '#ffffff' ? Theme.colors.dark : 'white', Theme.sh.mat, Theme.font.style]]]) + \" \" + 'thinklogo'\n        }), /*#__PURE__*/_jsx(\"textarea\", {\n          name: \"thought\",\n          value: inputs.thought,\n          onChange: handleType,\n          placeholder: \"Hmm...what am i thinking today?\",\n          required: true,\n          className: _JSXStyle.dynamic([[\"1090097970\", [themeColor === '#ffffff' ? Theme.colors.dark : 'white', Theme.sh.mat, Theme.font.style]]])\n        }), /*#__PURE__*/_jsx(\"button\", {\n          type: \"submit\",\n          className: _JSXStyle.dynamic([[\"1090097970\", [themeColor === '#ffffff' ? Theme.colors.dark : 'white', Theme.sh.mat, Theme.font.style]]]),\n          children: \"Upload Thought\"\n        })]\n      })\n    }), /*#__PURE__*/_jsx(_JSXStyle, {\n      id: \"1090097970\",\n      dynamic: [themeColor === '#ffffff' ? Theme.colors.dark : 'white', Theme.sh.mat, Theme.font.style],\n      children: [\".thinklogo.__jsx-style-dynamic-selector{float:left;width:60px;height:60px;margin:10px 0;}\", `.item.__jsx-style-dynamic-selector h2.__jsx-style-dynamic-selector{position:absolute;font:14px 'Roboto';bottom:10px;text-align:center;left:50%;color:${themeColor === '#ffffff' ? Theme.colors.dark : 'white'};-webkit-transform:translate(-50%);-ms-transform:translate(-50%);transform:translate(-50%);}`, `.uploadThought.__jsx-style-dynamic-selector{width:70%;border-radius:4px;box-shadow:${Theme.sh.mat};position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);transform:translate(-50%,-50%);}`, \".uploadThought.__jsx-style-dynamic-selector form.__jsx-style-dynamic-selector{float:left;width:90%;padding:30px 5%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-flex-flow:column wrap;-ms-flex-flow:column wrap;flex-flow:column wrap;}\", \".uploadThought.__jsx-style-dynamic-selector label.__jsx-style-dynamic-selector{float:left;margin:20px 0;padding:0;width:100%;text-align:center;font:18px 'Montserrat';}\", \".uploadThought.__jsx-style-dynamic-selector button.__jsx-style-dynamic-selector{float:left;margin:20px 0;min-width:20%;}\", `.uploadThought.__jsx-style-dynamic-selector textarea.__jsx-style-dynamic-selector{float:left;width:80%;padding:25px 2.5%;box-shadow:none;border:none;margin:30px 0;min-height:150px;resize:vertical;font:15px ${Theme.font.style};}`, \".dash.__jsx-style-dynamic-selector{float:left;width:100%;position:relative;height:100%;overflow-y:hidden;}\"]\n    })]\n  });\n}\n\nexport default Dashboard;","map":null,"metadata":{},"sourceType":"module"}