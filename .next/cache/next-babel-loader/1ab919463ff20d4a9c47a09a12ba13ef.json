{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/williamforte/Canvas/SynapseFlash/pages/dashboard.js\";\nimport _JSXStyle from \"styled-jsx/style\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Theme from '../styles/theme';\nimport { uploadThought } from '../services/thoughtservice';\nimport { fetchThoughts } from \"../store/actions/postAction\";\nimport Link from 'next/link';\n\nfunction Dashboard({\n  themeColor\n}) {\n  const {\n    profile,\n    auth,\n    thoughts\n  } = useSelector(state => state.post);\n  const dispatch = useDispatch();\n  const {\n    0: inputs,\n    1: setInputs\n  } = useState({\n    thought: '',\n    user: profile,\n    auth: auth\n  });\n  useEffect(() => {\n    dispatch(fetchThoughts(profile.email, auth));\n  }, []);\n\n  const handleType = e => {\n    e.persist();\n    setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const uploadNewThought = async e => {\n    e.preventDefault();\n    setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n      thought: ''\n    }));\n    const newThought = await uploadThought(inputs.thought, profile.email, \"normal\", auth);\n    if (newThought) console.log(newThought);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: _JSXStyle.dynamic([[\"1090097970\", [themeColor === '#ffffff' ? Theme.colors.dark : 'white', Theme.sh.mat, Theme.font.style]]]) + \" \" + 'dash',\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      href: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: _JSXStyle.dynamic([[\"1090097970\", [themeColor === '#ffffff' ? Theme.colors.dark : 'white', Theme.sh.mat, Theme.font.style]]]) + \" \" + 'link',\n        children: \"Back to home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: _JSXStyle.dynamic([[\"1090097970\", [themeColor === '#ffffff' ? Theme.colors.dark : 'white', Theme.sh.mat, Theme.font.style]]]) + \" \" + 'uploadThought',\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: uploadNewThought,\n        className: _JSXStyle.dynamic([[\"1090097970\", [themeColor === '#ffffff' ? Theme.colors.dark : 'white', Theme.sh.mat, Theme.font.style]]]),\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: _JSXStyle.dynamic([[\"1090097970\", [themeColor === '#ffffff' ? Theme.colors.dark : 'white', Theme.sh.mat, Theme.font.style]]]),\n          children: \"Start Thinking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/think.png\",\n          className: _JSXStyle.dynamic([[\"1090097970\", [themeColor === '#ffffff' ? Theme.colors.dark : 'white', Theme.sh.mat, Theme.font.style]]]) + \" \" + 'thinklogo'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"thought\",\n          value: inputs.thought,\n          onChange: handleType,\n          placeholder: \"Hmm...what am i thinking today?\",\n          required: true,\n          className: _JSXStyle.dynamic([[\"1090097970\", [themeColor === '#ffffff' ? Theme.colors.dark : 'white', Theme.sh.mat, Theme.font.style]]])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: _JSXStyle.dynamic([[\"1090097970\", [themeColor === '#ffffff' ? Theme.colors.dark : 'white', Theme.sh.mat, Theme.font.style]]]),\n          children: \"Upload Thought\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: \"1090097970\",\n      dynamic: [themeColor === '#ffffff' ? Theme.colors.dark : 'white', Theme.sh.mat, Theme.font.style],\n      children: `.thinklogo.__jsx-style-dynamic-selector{float:left;width:60px;height:60px;margin:10px 0;}.item.__jsx-style-dynamic-selector h2.__jsx-style-dynamic-selector{position:absolute;font:14px 'Roboto';bottom:10px;text-align:center;left:50%;color:${themeColor === '#ffffff' ? Theme.colors.dark : 'white'};-webkit-transform:translate(-50%);-ms-transform:translate(-50%);transform:translate(-50%);}.uploadThought.__jsx-style-dynamic-selector{width:70%;border-radius:4px;box-shadow:${Theme.sh.mat};position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);transform:translate(-50%,-50%);}.uploadThought.__jsx-style-dynamic-selector form.__jsx-style-dynamic-selector{float:left;width:90%;padding:30px 5%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-flex-flow:column wrap;-ms-flex-flow:column wrap;flex-flow:column wrap;}.uploadThought.__jsx-style-dynamic-selector label.__jsx-style-dynamic-selector{float:left;margin:20px 0;padding:0;width:100%;text-align:center;font:18px 'Montserrat';}.uploadThought.__jsx-style-dynamic-selector button.__jsx-style-dynamic-selector{float:left;margin:20px 0;min-width:20%;}.uploadThought.__jsx-style-dynamic-selector textarea.__jsx-style-dynamic-selector{float:left;width:80%;padding:25px 2.5%;box-shadow:none;border:none;margin:30px 0;min-height:150px;resize:vertical;font:15px ${Theme.font.style};}.dash.__jsx-style-dynamic-selector{float:left;width:100%;position:relative;height:100%;overflow-y:hidden;}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy93aWxsaWFtZm9ydGUvQ2FudmFzL1N5bmFwc2VGbGFzaC9wYWdlcy9kYXNoYm9hcmQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBcUR3QixBQUdnQyxBQU1PLEFBU1IsQUFTQyxBQVNBLEFBUUEsQUFLQSxBQVdBLFVBekNPLENBZlAsQUF3QkQsQUFTSSxBQVFBLEFBS0osQUFXQyxPQW5EUSxHQW1CSCxBQXNCRSxDQTlDTixBQXlETSxHQXhCUixBQVFJLEdBMUIwQixNQWR6QixDQWlDSixFQTVCQyxBQW1CQyxFQWlCakIsQUFLb0IsQ0FXSixNQXZCTSxFQWpDdEIsQ0FLc0IsR0FvREEsR0FYTixTQVpXLEdBNUJkLEFBeUNLLENBakNJLEVBNEN0QixNQW5EdUMsS0F5Q2xCLEtBakNULENBb0JaLE9BbkJhLElBaUNPLEtBaENlLFFBVEwsQUFnQkgsR0EwQmdCLHVDQUMzQyxnREExQ0EsT0FTQSxFQU91Qiw2RkFDRyw4RUFDMUIiLCJmaWxlIjoiL1VzZXJzL3dpbGxpYW1mb3J0ZS9DYW52YXMvU3luYXBzZUZsYXNoL3BhZ2VzL2Rhc2hib2FyZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIlxuaW1wb3J0IHsgdXNlU2VsZWN0b3IsIHVzZURpc3BhdGNoIH0gZnJvbSBcInJlYWN0LXJlZHV4XCJcbmltcG9ydCBUaGVtZSBmcm9tICcuLi9zdHlsZXMvdGhlbWUnXG5pbXBvcnQgeyB1cGxvYWRUaG91Z2h0IH0gZnJvbSAnLi4vc2VydmljZXMvdGhvdWdodHNlcnZpY2UnXG5pbXBvcnQgeyBmZXRjaFRob3VnaHRzIH0gZnJvbSBcIi4uL3N0b3JlL2FjdGlvbnMvcG9zdEFjdGlvblwiXG5pbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnXG5cbmZ1bmN0aW9uIERhc2hib2FyZCh7dGhlbWVDb2xvcn0pIHtcblxuICAgIGNvbnN0IHtwcm9maWxlLCBhdXRoLCB0aG91Z2h0c30gPSB1c2VTZWxlY3RvcihzdGF0ZSA9PiBzdGF0ZS5wb3N0KVxuICAgIGNvbnN0IGRpc3BhdGNoID0gdXNlRGlzcGF0Y2goKVxuICAgIGNvbnN0IFtpbnB1dHMsIHNldElucHV0c10gPSB1c2VTdGF0ZSh7XG4gICAgICAgIHRob3VnaHQ6ICcnLCBcbiAgICAgICAgdXNlcjogcHJvZmlsZSxcbiAgICAgICAgYXV0aDogYXV0aFxuICAgIH0pXG5cbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBkaXNwYXRjaChmZXRjaFRob3VnaHRzKHByb2ZpbGUuZW1haWwsIGF1dGgpKVxuICAgIH0sIFtdKVxuXG4gICAgY29uc3QgaGFuZGxlVHlwZSA9IChlKSA9PiB7XG4gICAgICAgIGUucGVyc2lzdCgpXG4gICAgICAgIHNldElucHV0cyh7XG4gICAgICAgICAgICAuLi5pbnB1dHMsXG4gICAgICAgICAgICBbZS50YXJnZXQubmFtZV06IGUudGFyZ2V0LnZhbHVlXG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgY29uc3QgdXBsb2FkTmV3VGhvdWdodCA9IGFzeW5jIChlKSA9PiB7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKVxuICAgICAgICBzZXRJbnB1dHMoey4uLmlucHV0cywgdGhvdWdodDogJyd9KVxuICAgICAgICBjb25zdCBuZXdUaG91Z2h0ID0gYXdhaXQgdXBsb2FkVGhvdWdodChpbnB1dHMudGhvdWdodCwgcHJvZmlsZS5lbWFpbCwgXCJub3JtYWxcIiwgYXV0aClcbiAgICAgICAgaWYobmV3VGhvdWdodCkgY29uc29sZS5sb2cobmV3VGhvdWdodClcbiAgICB9XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nZGFzaCc+XG4gICAgICAgICAgICA8TGluayBocmVmPScvJz48ZGl2IGNsYXNzTmFtZT0nbGluayc+QmFjayB0byBob21lPC9kaXY+PC9MaW5rPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J3VwbG9hZFRob3VnaHQnPlxuICAgICAgICAgICAgICAgIDxmb3JtIG9uU3VibWl0PXt1cGxvYWROZXdUaG91Z2h0fT5cbiAgICAgICAgICAgICAgICAgICAgPGxhYmVsPlN0YXJ0IFRoaW5raW5nPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzc05hbWU9J3RoaW5rbG9nbycgc3JjPScvdGhpbmsucG5nJy8+XG4gICAgICAgICAgICAgICAgICAgIDx0ZXh0YXJlYVxuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZT0ndGhvdWdodCdcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXtpbnB1dHMudGhvdWdodH1cbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtoYW5kbGVUeXBlfVxuICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9J0htbS4uLndoYXQgYW0gaSB0aGlua2luZyB0b2RheT8nXG4gICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZFxuICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9J3N1Ym1pdCc+VXBsb2FkIFRob3VnaHQ8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICA8L2Zvcm0+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgICAgICAgICAudGhpbmtsb2dvIHtcbiAgICAgICAgICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiA2MHB4O1xuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDYwcHg7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbjogMTBweCAwIDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLml0ZW0gaDIge1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICAgICAgICAgIGZvbnQ6IDE0cHggJ1JvYm90byc7XG4gICAgICAgICAgICAgICAgICAgIGJvdHRvbTogMTBweDtcbiAgICAgICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgICAgICAgICBsZWZ0OiA1MCU7XG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiAke3RoZW1lQ29sb3IgPT09ICcjZmZmZmZmJyA/IFRoZW1lLmNvbG9ycy5kYXJrOiAnd2hpdGUnfTtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC51cGxvYWRUaG91Z2h0IHtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDcwJTtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgICAgICAgICAgICAgICAgICBib3gtc2hhZG93OiAke1RoZW1lLnNoLm1hdH07XG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgICAgICAgICAgdG9wOiA1MCU7XG4gICAgICAgICAgICAgICAgICAgIGxlZnQ6IDUwJTtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwtNTAlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLnVwbG9hZFRob3VnaHQgZm9ybSB7XG4gICAgICAgICAgICAgICAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogOTAlO1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAzMHB4IDUlO1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICAgICAgICAgICAgZmxleC1mbG93OiBjb2x1bW4gd3JhcDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLnVwbG9hZFRob3VnaHQgbGFiZWwge1xuICAgICAgICAgICAgICAgICAgICBmbG9hdDogbGVmdDtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAyMHB4IDA7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICAgICAgICAgIGZvbnQ6IDE4cHggJ01vbnRzZXJyYXQnO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAudXBsb2FkVGhvdWdodCBidXR0b24ge1xuICAgICAgICAgICAgICAgICAgICBmbG9hdDogbGVmdDtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAyMHB4IDA7XG4gICAgICAgICAgICAgICAgICAgIG1pbi13aWR0aDogMjAlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAudXBsb2FkVGhvdWdodCB0ZXh0YXJlYSB7XG4gICAgICAgICAgICAgICAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogODAlO1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAyNXB4IDIuNSU7XG4gICAgICAgICAgICAgICAgICAgIGJveC1zaGFkb3c6IG5vbmU7XG4gICAgICAgICAgICAgICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAzMHB4IDA7XG4gICAgICAgICAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDE1MHB4O1xuICAgICAgICAgICAgICAgICAgICByZXNpemU6IHZlcnRpY2FsO1xuICAgICAgICAgICAgICAgICAgICBmb250OiAxNXB4ICR7VGhlbWUuZm9udC5zdHlsZX07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC5kYXNoIHtcbiAgICAgICAgICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgICAgICAgICAgICAgb3ZlcmZsb3cteTogaGlkZGVuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGB9PC9zdHlsZT5cbiAgICAgICAgPC9kaXY+XG4gICAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBEYXNoYm9hcmQiXX0= */\n/*@ sourceURL=/Users/williamforte/Canvas/SynapseFlash/pages/dashboard.js */`\n    }, void 0, false, void 0, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/williamforte/Canvas/SynapseFlash/pages/dashboard.js"],"names":["useState","useEffect","useSelector","useDispatch","Theme","uploadThought","fetchThoughts","Link","Dashboard","themeColor","profile","auth","thoughts","state","post","dispatch","inputs","setInputs","thought","user","email","handleType","e","persist","target","name","value","uploadNewThought","preventDefault","newThought","console","log","colors","dark","sh","mat","font","style"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport Theme from '../styles/theme'\nimport { uploadThought } from '../services/thoughtservice'\nimport { fetchThoughts } from \"../store/actions/postAction\"\nimport Link from 'next/link'\n\nfunction Dashboard({themeColor}) {\n\n    const {profile, auth, thoughts} = useSelector(state => state.post)\n    const dispatch = useDispatch()\n    const [inputs, setInputs] = useState({\n        thought: '', \n        user: profile,\n        auth: auth\n    })\n\n    useEffect(() => {\n        dispatch(fetchThoughts(profile.email, auth))\n    }, [])\n\n    const handleType = (e) => {\n        e.persist()\n        setInputs({\n            ...inputs,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const uploadNewThought = async (e) => {\n        e.preventDefault()\n        setInputs({...inputs, thought: ''})\n        const newThought = await uploadThought(inputs.thought, profile.email, \"normal\", auth)\n        if(newThought) console.log(newThought)\n    }\n\n    return (\n        <div className='dash'>\n            <Link href='/'><div className='link'>Back to home</div></Link>\n            <div className='uploadThought'>\n                <form onSubmit={uploadNewThought}>\n                    <label>Start Thinking</label>\n                    <img className='thinklogo' src='/think.png'/>\n                    <textarea\n                        name='thought'\n                        value={inputs.thought}\n                        onChange={handleType}\n                        placeholder='Hmm...what am i thinking today?'\n                        required\n                    />\n                    <button type='submit'>Upload Thought</button>\n                </form>\n            </div>\n            <style jsx>{`\n                .thinklogo {\n                    float: left;\n                    width: 60px;\n                    height: 60px;\n                    margin: 10px 0 ;\n                }\n                .item h2 {\n                    position: absolute;\n                    font: 14px 'Roboto';\n                    bottom: 10px;\n                    text-align: center;\n                    left: 50%;\n                    color: ${themeColor === '#ffffff' ? Theme.colors.dark: 'white'};\n                    transform: translate(-50%);\n                }\n                .uploadThought {\n                    width: 70%;\n                    border-radius: 4px;\n                    box-shadow: ${Theme.sh.mat};\n                    position: absolute;\n                    top: 50%;\n                    left: 50%;\n                    transform: translate(-50%,-50%);\n                }\n                .uploadThought form {\n                    float: left;\n                    width: 90%;\n                    padding: 30px 5%;\n                    display: flex;\n                    justify-content: center;\n                    align-items: center;\n                    flex-flow: column wrap;\n                }\n                .uploadThought label {\n                    float: left;\n                    margin: 20px 0;\n                    padding: 0;\n                    width: 100%;\n                    text-align: center;\n                    font: 18px 'Montserrat';\n                }\n                .uploadThought button {\n                    float: left;\n                    margin: 20px 0;\n                    min-width: 20%;\n                }\n                .uploadThought textarea {\n                    float: left;\n                    width: 80%;\n                    padding: 25px 2.5%;\n                    box-shadow: none;\n                    border: none;\n                    margin: 30px 0;\n                    min-height: 150px;\n                    resize: vertical;\n                    font: 15px ${Theme.font.style};\n                }\n                .dash {\n                    float: left;\n                    width: 100%;\n                    position: relative;\n                    height: 100%;\n                    overflow-y: hidden;\n                }\n            `}</style>\n        </div>\n    )\n}\n\nexport default Dashboard"]},"metadata":{},"sourceType":"module"}