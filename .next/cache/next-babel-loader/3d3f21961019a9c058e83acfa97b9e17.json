{"ast":null,"code":"import _regeneratorRuntime from \"/Users/williamforte/Canvas/SynapseFlash/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/williamforte/Canvas/SynapseFlash/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as types from '../types';\nimport { getProjects } from '../../services/projectservice';\nimport { loginRequest } from '../../services/apiservice';\nimport jwt_decode from 'jwt-decode';\nimport { Router } from 'next/router';\nexport var fetchProjects = function fetchProjects() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return getProjects(50);\n\n            case 2:\n              res = _context.sent;\n              console.log(res);\n              dispatch({\n                type: types.GET_PROJECTS,\n                payload: res\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var loginAttempt = function loginAttempt(email, password) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var res, decoded;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return loginRequest(email, password);\n\n            case 2:\n              res = _context2.sent;\n              dispatch({\n                type: types.AUTH,\n                payload: res\n              });\n              decoded = jwt_decode(res.accessToken);\n              dispatch({\n                type: types.LOGIN,\n                payload: decoded\n              });\n              Router.push('/');\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["/Users/williamforte/Canvas/SynapseFlash/store/actions/postAction.js"],"names":["types","getProjects","loginRequest","jwt_decode","Router","fetchProjects","dispatch","res","console","log","type","GET_PROJECTS","payload","loginAttempt","email","password","AUTH","decoded","accessToken","LOGIN","push"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,UAAvB;AACA,SAASC,WAAT,QAA4B,+BAA5B;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,MAAT,QAAuB,aAAvB;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA;AAAA,wEAAM,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACbL,WAAW,CAAC,EAAD,CADE;;AAAA;AACzBM,cAAAA,GADyB;AAE/BC,cAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAD,cAAAA,QAAQ,CAAC;AACLI,gBAAAA,IAAI,EAAEV,KAAK,CAACW,YADP;AAELC,gBAAAA,OAAO,EAAEL;AAFJ,eAAD,CAAR;;AAH+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAN;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB;AASP,OAAO,IAAMM,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAQC,QAAR;AAAA;AAAA,yEAAqB,kBAAMT,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAC3BJ,YAAY,CAACY,KAAD,EAAQC,QAAR,CADe;;AAAA;AACvCR,cAAAA,GADuC;AAE7CD,cAAAA,QAAQ,CAAC;AACLI,gBAAAA,IAAI,EAAEV,KAAK,CAACgB,IADP;AAELJ,gBAAAA,OAAO,EAAEL;AAFJ,eAAD,CAAR;AAIMU,cAAAA,OANuC,GAM7Bd,UAAU,CAACI,GAAG,CAACW,WAAL,CANmB;AAO7CZ,cAAAA,QAAQ,CAAC;AACLI,gBAAAA,IAAI,EAAEV,KAAK,CAACmB,KADP;AAELP,gBAAAA,OAAO,EAAEK;AAFJ,eAAD,CAAR;AAIAb,cAAAA,MAAM,CAACgB,IAAP,CAAY,GAAZ;;AAX6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAArB;;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB","sourcesContent":["import * as types from '../types'\nimport { getProjects } from '../../services/projectservice'\nimport { loginRequest } from '../../services/apiservice'\nimport jwt_decode from 'jwt-decode';\nimport { Router } from 'next/router';\n\nexport const fetchProjects = () => async dispatch => {\n    const res = await getProjects(50)\n    console.log(res)\n    dispatch({\n        type: types.GET_PROJECTS,\n        payload: res\n    })\n}\n\nexport const loginAttempt = (email, password) => async dispatch => {\n    const res = await loginRequest(email, password)\n    dispatch({\n        type: types.AUTH,\n        payload: res\n    })\n    const decoded = jwt_decode(res.accessToken)\n    dispatch({\n        type: types.LOGIN,\n        payload: decoded\n    })\n    Router.push('/')\n}"]},"metadata":{},"sourceType":"module"}