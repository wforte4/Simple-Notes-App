{"ast":null,"code":"import { Cookies } from 'react-cookie';\nimport { baseConfig } from './restservice';\nconst cookies = new Cookies();\nexport async function createProject(title, body, tags, images, date) {\n  const getCookies = cookies.getAll(); // New Login Data request\n\n  const newProject = await fetch(baseConfig.projectURL, {\n    method: 'POST',\n    headers: {\n      \"Content-type\": \"application/json\",\n      \"Authorization\": `Bearer ${getCookies.accessToken}`\n    },\n    body: JSON.stringify({\n      \"title\": title,\n      \"body\": body,\n      \"tags\": tags,\n      \"images\": images,\n      \"date\": date\n    })\n  }).then(function (response) {\n    return response.json();\n  }).catch(function (error) {\n    return error;\n  });\n\n  if (newProject) {\n    return newProject;\n  }\n}\nexport async function getProjects(limit) {\n  // New Login Data request\n  const getAllProjects = await fetch(baseConfig.projectURL, {\n    method: 'GET',\n    headers: {\n      \"Content-type\": \"application/json\"\n    },\n    query: JSON.stringify({\n      \"limit\": limit\n    })\n  }).then(function (response) {\n    return response.json();\n  }).catch(function (error) {\n    console.log(error);\n    return 'none';\n  });\n\n  if (getAllProjects) {\n    return getAllProjects;\n  }\n}\nexport async function getProjectById(id) {\n  // New Login Data request\n  const newProject = await fetch(baseConfig.projectURL + id, {\n    method: 'GET',\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  }).then(function (response) {\n    if (response.status == 403) {\n      return 'Not Authorized';\n    }\n\n    return response.json();\n  }).catch(function (error) {\n    return error;\n  });\n\n  if (newProject) {\n    return newProject;\n  }\n}\nexport async function removeProject(projectId) {\n  const getCookies = cookies.getAll(); // New Login Data request\n\n  const newProject = await fetch(baseConfig.projectURL + projectId, {\n    method: 'DELETE',\n    headers: {\n      \"Authorization\": `Bearer ${getCookies.accessToken ? getCookies.accessToken : token}`\n    }\n  }).then(function (response) {\n    return response.json();\n  }).catch(function (error) {\n    return error;\n  });\n\n  if (newProject) {\n    return newProject;\n  }\n}\nexport async function updateProject(projectId, title, body, images, tags) {\n  const getCookies = cookies.getAll(); // New Login Data request\n\n  const newProject = await fetch(baseConfig.projectURL + projectId, {\n    method: 'PATCH',\n    headers: {\n      \"Content-type\": \"application/json\",\n      \"Authorization\": `Bearer ${getCookies.accessToken ? getCookies.accessToken : token}`\n    },\n    body: JSON.stringify({\n      title: title,\n      body: body,\n      tags: tags,\n      images: images\n    })\n  }).then(function (response) {\n    return response.json();\n  }).catch(function (error) {\n    return error;\n  });\n\n  if (newProject) {\n    return newProject;\n  }\n}","map":null,"metadata":{},"sourceType":"module"}