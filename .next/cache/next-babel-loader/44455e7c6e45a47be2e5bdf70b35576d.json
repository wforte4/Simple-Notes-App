{"ast":null,"code":"import _defineProperty from \"/Users/williamforte/Canvas/SynapseFlash/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as types from '../types';\nvar initialState = {\n  projects: [],\n  post: {},\n  loading: false,\n  error: null\n};\nexport var postReducer = function postReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.GET_PROJECTS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        projects: action.payload,\n        loading: false,\n        error: null\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/williamforte/Canvas/SynapseFlash/store/reducers/postReducer.js"],"names":["types","initialState","projects","post","loading","error","postReducer","state","action","type","GET_PROJECTS","payload"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,UAAvB;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,EADO;AAEjBC,EAAAA,IAAI,EAAE,EAFW;AAGjBC,EAAAA,OAAO,EAAE,KAHQ;AAIjBC,EAAAA,KAAK,EAAE;AAJU,CAArB;AAOA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AAEzD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKT,KAAK,CAACU,YAAX;AACI,6CACOH,KADP;AAEIL,QAAAA,QAAQ,EAAEM,MAAM,CAACG,OAFrB;AAGIP,QAAAA,OAAO,EAAE,KAHb;AAIIC,QAAAA,KAAK,EAAE;AAJX;;AAMJ;AACI,aAAOE,KAAP;AATR;AAWH,CAbM","sourcesContent":["import * as types from '../types'\n\nconst initialState = { \n    projects: [],\n    post: {},\n    loading: false,\n    error: null\n}\n\nexport const postReducer = (state = initialState, action) => {\n\n    switch(action.type) {\n        case types.GET_PROJECTS:\n            return {\n                ...state,\n                projects: action.payload,\n                loading: false,\n                error: null\n            }\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}