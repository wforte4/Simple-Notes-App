{"ast":null,"code":"import { useSelector } from \"react-redux\";\nimport { baseConfig } from '../services/restservice';\nexport async function uploadThought({\n  thought,\n  user,\n  mindset,\n  auth\n}) {\n  console.log(auth); // New Login Data request\n\n  const newThought = await fetch(baseConfig.thoughtURL, {\n    method: 'POST',\n    headers: {\n      \"Content-type\": \"application/json\",\n      \"Authorization\": `Bearer ${auth && auth.accessToken}`\n    },\n    body: JSON.stringify({\n      \"thought\": thought,\n      \"user\": user,\n      \"mindset\": mindset\n    })\n  }).then(function (response) {\n    return response.json();\n  }).catch(function (error) {\n    return error;\n  });\n\n  if (newThought) {\n    return newThought;\n  }\n}","map":{"version":3,"sources":["/Users/williamforte/Canvas/SynapseFlash/services/thoughtservice.js"],"names":["useSelector","baseConfig","uploadThought","thought","user","mindset","auth","console","log","newThought","fetch","thoughtURL","method","headers","accessToken","body","JSON","stringify","then","response","json","catch","error"],"mappings":"AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,yBAA3B;AAEA,OAAO,eAAeC,aAAf,CAA6B;AAACC,EAAAA,OAAD;AAAUC,EAAAA,IAAV;AAAgBC,EAAAA,OAAhB;AAAyBC,EAAAA;AAAzB,CAA7B,EAA6D;AAChEC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EADgE,CAEhE;;AACA,QAAMG,UAAU,GAAG,MAAMC,KAAK,CAACT,UAAU,CAACU,UAAZ,EAAwB;AAClDC,IAAAA,MAAM,EAAE,MAD0C;AAElDC,IAAAA,OAAO,EAAE;AACL,sBAAgB,kBADX;AAEL,uBAAkB,UAASP,IAAI,IAAIA,IAAI,CAACQ,WAAY;AAF/C,KAFyC;AAMlDC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjB,iBAAWd,OADM;AAEjB,cAAQC,IAFS;AAGjB,iBAAWC;AAHM,KAAf;AAN4C,GAAxB,CAAL,CAYxBa,IAZwB,CAYnB,UAASC,QAAT,EAAmB;AACrB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAdwB,EAexBC,KAfwB,CAelB,UAASC,KAAT,EAAgB;AACnB,WAAOA,KAAP;AACH,GAjBwB,CAAzB;;AAkBA,MAAGb,UAAH,EAAe;AACX,WAAOA,UAAP;AACH;AAEJ","sourcesContent":["import { useSelector } from \"react-redux\";\nimport { baseConfig } from '../services/restservice'\n\nexport async function uploadThought({thought, user, mindset, auth}) {\n    console.log(auth)\n    // New Login Data request\n    const newThought = await fetch(baseConfig.thoughtURL, {\n        method: 'POST',\n        headers: {\n            \"Content-type\": \"application/json\",\n            \"Authorization\": `Bearer ${auth && auth.accessToken}`\n        },\n        body: JSON.stringify({\n            \"thought\": thought,\n            \"user\": user,\n            \"mindset\": mindset,\n        })\n    })\n    .then(function(response) {\n        return response.json();\n    })\n    .catch(function(error) {\n        return error\n    });\n    if(newThought) {\n        return newThought\n    }\n\n}"]},"metadata":{},"sourceType":"module"}