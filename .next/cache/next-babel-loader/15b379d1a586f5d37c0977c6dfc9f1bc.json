{"ast":null,"code":"import _regeneratorRuntime from \"/home/wforte/canvas/SynapseFlash/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/wforte/canvas/SynapseFlash/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Router from 'next/router';\nimport { Cookies } from 'react-cookie';\nimport jwt_decode from 'jwt-decode';\nimport { baseConfig } from './restservice';\nvar cookies = new Cookies();\nexport function createProfile(_x) {\n  return _createProfile.apply(this, arguments);\n}\n\nfunction _createProfile() {\n  _createProfile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n    var newUser;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(baseConfig.baseURL + '/users', {\n              method: 'POST',\n              headers: {\n                \"Content-type\": \"application/json\"\n              },\n              body: JSON.stringify(data)\n            }).then(function (response) {\n              return response.json();\n            }).then(function (data) {\n              return data;\n            })[\"catch\"](function (error) {\n              console.log('Request failed', error);\n            });\n\n          case 2:\n            newUser = _context.sent;\n\n            if (!newUser) {\n              _context.next = 5;\n              break;\n            }\n\n            return _context.abrupt(\"return\", newUser);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _createProfile.apply(this, arguments);\n}\n\nexport function loginRequest(_x2, _x3) {\n  return _loginRequest.apply(this, arguments);\n}\n\nfunction _loginRequest() {\n  _loginRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(email, password) {\n    var newLogin;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetch(baseConfig.baseURL + '/auth', {\n              method: 'POST',\n              headers: {\n                \"Content-type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                \"email\": email,\n                \"password\": password\n              })\n            }).then(function (response) {\n              if (response.status == 400) return response.status;\n              return response.json();\n            }).then(function (data) {\n              return data;\n            })[\"catch\"](function (error) {\n              return error;\n            });\n\n          case 2:\n            newLogin = _context2.sent;\n            return _context2.abrupt(\"return\", newLogin);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _loginRequest.apply(this, arguments);\n}\n\nexport function forgotPassword(_x4) {\n  return _forgotPassword.apply(this, arguments);\n}\n\nfunction _forgotPassword() {\n  _forgotPassword = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(email) {\n    var newLogin;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return fetch(baseConfig.baseURL + '/users/forgotpass/' + email, {\n              method: 'GET',\n              headers: {\n                \"Content-type\": \"application/json\"\n              }\n            }).then(function (response) {\n              return response.json();\n            }).then(function (data) {\n              return data;\n            })[\"catch\"](function (error) {\n              return error;\n            });\n\n          case 2:\n            newLogin = _context3.sent;\n\n            if (!newLogin) {\n              _context3.next = 5;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", newLogin);\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _forgotPassword.apply(this, arguments);\n}\n\nexport function changePassword(_x5, _x6) {\n  return _changePassword.apply(this, arguments);\n}\n\nfunction _changePassword() {\n  _changePassword = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(token, newPassword) {\n    var newLogin;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return fetch(baseConfig.baseURL + '/users/changepassword/' + newPassword, {\n              method: 'GET',\n              headers: {\n                \"Content-type\": \"application/json\",\n                \"Authorization\": \"Bearer \".concat(token)\n              }\n            }).then(function (response) {\n              return response.json();\n            }).then(function (data) {\n              return data;\n            })[\"catch\"](function (error) {\n              return error;\n            });\n\n          case 2:\n            newLogin = _context4.sent;\n\n            if (!newLogin) {\n              _context4.next = 5;\n              break;\n            }\n\n            return _context4.abrupt(\"return\", newLogin);\n\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _changePassword.apply(this, arguments);\n}\n\nexport function submitContact(_x7, _x8, _x9, _x10) {\n  return _submitContact.apply(this, arguments);\n}\n\nfunction _submitContact() {\n  _submitContact = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(name, message, email, cellphone) {\n    var newfetch;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return fetch(baseConfig.baseURL + '/contact', {\n              method: 'POST',\n              headers: {\n                \"Content-type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                \"name\": name,\n                \"message\": message,\n                \"cellphone\": cellphone,\n                \"email\": email\n              })\n            }).then(function (res) {\n              return res.status;\n            })[\"catch\"](function (error) {\n              console.log('Request failed', error);\n            });\n\n          case 2:\n            newfetch = _context5.sent;\n\n            if (!newfetch) {\n              _context5.next = 7;\n              break;\n            }\n\n            return _context5.abrupt(\"return\", newfetch);\n\n          case 7:\n            return _context5.abrupt(\"return\", 404);\n\n          case 8:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _submitContact.apply(this, arguments);\n}\n\nexport function patchUser(_x11, _x12, _x13) {\n  return _patchUser.apply(this, arguments);\n}\n\nfunction _patchUser() {\n  _patchUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(userId, token, userData) {\n    var newfetch;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return fetch(baseConfig.baseURL + '/users/' + userId, {\n              method: 'PATCH',\n              headers: {\n                \"Content-type\": \"application/json\",\n                \"Authorization\": \"Bearer \".concat(token)\n              },\n              body: JSON.stringify({\n                userData: userData\n              })\n            }).then(function (res) {\n              return res.ok ? res : Promise.reject(res);\n            }).then(function (res) {\n              return res.json();\n            })[\"catch\"](function (error) {\n              console.log('Request failed', error);\n            });\n\n          case 2:\n            newfetch = _context6.sent;\n\n            if (!newfetch) {\n              _context6.next = 7;\n              break;\n            }\n\n            return _context6.abrupt(\"return\", newfetch);\n\n          case 7:\n            return _context6.abrupt(\"return\", 404);\n\n          case 8:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _patchUser.apply(this, arguments);\n}\n\nexport function getAllUsers(_x14, _x15) {\n  return _getAllUsers.apply(this, arguments);\n}\n\nfunction _getAllUsers() {\n  _getAllUsers = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(token, limit) {\n    var allUsers;\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return fetch(baseConfig.baseURL + '/users', {\n              method: 'GET',\n              headers: {\n                \"Content-type\": \"application/json\",\n                \"Authorization\": \"Bearer \".concat(token)\n              },\n              query: JSON.stringify({\n                \"limit\": limit\n              })\n            }).then(function (res) {\n              console.log(res);\n              if (!res.ok) return res.status;else {\n                return res.json();\n              }\n            }).then(function (data) {\n              return data;\n            });\n\n          case 2:\n            allUsers = _context7.sent;\n\n            if (!allUsers) {\n              _context7.next = 5;\n              break;\n            }\n\n            return _context7.abrupt(\"return\", allUsers);\n\n          case 5:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _getAllUsers.apply(this, arguments);\n}","map":{"version":3,"sources":["/home/wforte/canvas/SynapseFlash/services/apiservice.js"],"names":["Router","Cookies","jwt_decode","baseConfig","cookies","createProfile","data","fetch","baseURL","method","headers","body","JSON","stringify","then","response","json","error","console","log","newUser","loginRequest","email","password","status","newLogin","forgotPassword","changePassword","token","newPassword","submitContact","name","message","cellphone","res","newfetch","patchUser","userId","userData","ok","Promise","reject","getAllUsers","limit","query","allUsers"],"mappings":"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","sourcesContent":["import Router from 'next/router';\nimport { Cookies } from 'react-cookie';\nimport jwt_decode from 'jwt-decode';\nimport { baseConfig } from './restservice';\n\nconst cookies = new Cookies();\n\nexport async function createProfile(data) {\n    // Request data to post to createprofile route on rest api\n    const newUser = await fetch(baseConfig.baseURL + '/users', {\n        method: 'POST',\n        headers: {\n            \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n    })\n    .then(function(response) {\n        return response.json()\n    })\n    .then(function(data) {\n        return data\n    })\n    .catch(function(error) {\n        console.log('Request failed', error);\n    });\n    if(newUser) return newUser\n}\n\nexport async function loginRequest(email, password) {\n    // New Login Data request\n    const newLogin = await fetch(baseConfig.baseURL + '/auth', {\n        method: 'POST',\n        headers: {\n            \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            \"email\": email,\n            \"password\": password\n        })\n    })\n    .then(function(response) {\n        if(response.status == 400) return response.status\n        return response.json();\n    })\n    .then(function(data) {\n        return data\n    })\n    .catch(function(error) {\n        return error\n    });\n    return newLogin\n}\n\nexport async function forgotPassword(email) {\n    // New Login Data request\n    const newLogin = await fetch(baseConfig.baseURL + '/users/forgotpass/' + email, {\n        method: 'GET',\n        headers: {\n            \"Content-type\": \"application/json\"\n        }\n    })\n    .then(function(response) {\n        return response.json();\n    })\n    .then(function(data) {\n        return data\n    })\n    .catch(function(error) {\n        return error\n    });\n    if(newLogin) {\n        return newLogin\n    }\n}\n\nexport async function changePassword(token, newPassword) {\n    // New Login Data request\n    const newLogin = await fetch(baseConfig.baseURL + '/users/changepassword/' + newPassword, {\n        method: 'GET',\n        headers: {\n            \"Content-type\": \"application/json\",\n            \"Authorization\": `Bearer ${token}`\n        }\n    })\n    .then(function(response) {\n        return response.json();\n    })\n    .then(function(data) {\n        return data\n    })\n    .catch(function(error) {\n        return error\n    });\n    if(newLogin) {\n        return newLogin\n    }\n}\n\nexport async function submitContact(name, message, email, cellphone) {\n    // Request data to post to createprofile route on rest api\n    const newfetch = await fetch(baseConfig.baseURL + '/contact', {\n        method: 'POST',\n        headers: {\n            \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            \"name\": name,\n            \"message\": message,\n            \"cellphone\": cellphone,\n            \"email\": email\n        })\n    })\n    .then(function(res) {\n        return res.status\n    })\n    .catch(function(error) {\n        console.log('Request failed', error);\n    });\n\n    if(newfetch) {\n        return newfetch\n    } else {\n        return 404\n    }\n}\n\nexport async function patchUser(userId, token, userData) {\n    // Request data to post to createprofile route on rest api\n    const newfetch = await fetch(baseConfig.baseURL + '/users/' + userId, {\n        method: 'PATCH',\n        headers: {\n            \"Content-type\": \"application/json\",\n            \"Authorization\": `Bearer ${token}`\n        },\n        body: JSON.stringify({ userData })\n    })\n    .then(res => (res.ok ? res: Promise.reject(res)))\n    .then(res => res.json())\n    .catch(function(error) {\n        console.log('Request failed', error);\n    });\n\n    if(newfetch) {\n        return newfetch\n    } else {\n        return 404\n    }\n}\n\nexport async function getAllUsers(token, limit) {\n    // New Login Data request\n    const allUsers = await fetch(baseConfig.baseURL + '/users', {\n        method: 'GET',\n        headers: {\n            \"Content-type\": \"application/json\",\n            \"Authorization\": `Bearer ${token}`\n        },\n        query: JSON.stringify({\n            \"limit\": limit\n        })\n    })\n    .then(res => {\n        console.log(res)\n        if(!res.ok) return res.status\n        else {\n            return res.json()\n        }\n    })\n    .then(function(data) {\n        return data\n    })\n    if(allUsers) {\n        return allUsers\n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}