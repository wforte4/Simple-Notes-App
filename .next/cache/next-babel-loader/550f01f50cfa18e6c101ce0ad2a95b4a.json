{"ast":null,"code":"import Router from 'next/router';\nimport { Cookies } from 'react-cookie';\nimport jwt_decode from 'jwt-decode';\nimport { baseConfig } from './restservice';\nconst cookies = new Cookies();\nexport async function createProfile(data) {\n  // Request data to post to createprofile route on rest api\n  const newUser = await fetch(baseConfig.baseURL + '/users', {\n    method: 'POST',\n    headers: {\n      \"Content-type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  }).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    return data;\n  }).catch(function (error) {\n    console.log('Request failed', error);\n  });\n  if (newUser) return newUser;\n}\nexport async function loginRequest(email, password) {\n  // New Login Data request\n  const newLogin = await fetch(baseConfig.baseURL + '/auth', {\n    method: 'POST',\n    headers: {\n      \"Content-type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      \"email\": email,\n      \"password\": password\n    })\n  }).then(function (response) {\n    if (response.status == 400) return response.status;\n    return response.json();\n  }).then(function (data) {\n    return data;\n  }).catch(function (error) {\n    return error;\n  });\n  return newLogin;\n}\nexport async function forgotPassword(email) {\n  // New Login Data request\n  const newLogin = await fetch(baseConfig.baseURL + '/users/forgotpass/' + email, {\n    method: 'GET',\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  }).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    return data;\n  }).catch(function (error) {\n    return error;\n  });\n\n  if (newLogin) {\n    return newLogin;\n  }\n}\nexport async function changePassword(token, newPassword) {\n  // New Login Data request\n  const newLogin = await fetch(baseConfig.baseURL + '/users/changepassword/' + newPassword, {\n    method: 'GET',\n    headers: {\n      \"Content-type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    return data;\n  }).catch(function (error) {\n    return error;\n  });\n\n  if (newLogin) {\n    return newLogin;\n  }\n}\nexport async function submitContact(name, message, email, cellphone) {\n  // Request data to post to createprofile route on rest api\n  const newfetch = await fetch(baseConfig.baseURL + '/contact', {\n    method: 'POST',\n    headers: {\n      \"Content-type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      \"name\": name,\n      \"message\": message,\n      \"cellphone\": cellphone,\n      \"email\": email\n    })\n  }).then(function (res) {\n    return res.status;\n  }).catch(function (error) {\n    console.log('Request failed', error);\n  });\n\n  if (newfetch) {\n    return newfetch;\n  } else {\n    return 404;\n  }\n}\nexport async function patchUser(userId, token, userData) {\n  // Request data to post to createprofile route on rest api\n  const newfetch = await fetch(baseConfig.baseURL + '/users/' + userId, {\n    method: 'PATCH',\n    headers: {\n      \"Content-type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      userData\n    })\n  }).then(function (response) {\n    console.log(response.status);\n    return response.json();\n  }).catch(function (error) {\n    console.log('Request failed', error);\n  });\n\n  if (newfetch) {\n    return newfetch;\n  } else {\n    return 404;\n  }\n}\nexport async function getAllUsers(token, limit) {\n  // New Login Data request\n  const allUsers = await fetch(baseConfig.baseURL + '/users', {\n    method: 'GET',\n    headers: {\n      \"Content-type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    },\n    query: JSON.stringify({\n      \"limit\": limit\n    })\n  }).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    return data;\n  }).catch(function (error) {\n    return error;\n  });\n\n  if (allUsers) {\n    return allUsers;\n  }\n}","map":null,"metadata":{},"sourceType":"module"}