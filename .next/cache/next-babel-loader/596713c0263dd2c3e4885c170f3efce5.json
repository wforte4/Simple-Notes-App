{"ast":null,"code":"import _regeneratorRuntime from \"/home/wforte/canvas/SynapseFlash/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/wforte/canvas/SynapseFlash/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Router from 'next/router';\nimport { Cookies } from 'react-cookie';\nimport jwt_decode from 'jwt-decode';\nimport { baseConfig } from './restservice';\nvar cookies = new Cookies();\nexport function createProfile(_x, _x2, _x3, _x4) {\n  return _createProfile.apply(this, arguments);\n}\n\nfunction _createProfile() {\n  _createProfile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(firstname, lastname, email, password) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // Request data to post to createprofile route on rest api\n            fetch(baseConfig.baseURL + '/users', {\n              method: 'POST',\n              headers: {\n                \"Content-type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                \"firstName\": firstname,\n                \"lastName\": lastname,\n                \"email\": email,\n                \"password\": password\n              })\n            }).then(function (response) {\n              return response.json();\n            }).then(function (data) {\n              console.log('Request succeeded with JSON response', data);\n            })[\"catch\"](function (error) {\n              console.log('Request failed', error);\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _createProfile.apply(this, arguments);\n}\n\nexport function loginRequest(_x5, _x6) {\n  return _loginRequest.apply(this, arguments);\n}\n\nfunction _loginRequest() {\n  _loginRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(email, password) {\n    var newLogin;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetch(baseConfig.baseURL + '/auth', {\n              method: 'POST',\n              headers: {\n                \"Content-type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                \"email\": email,\n                \"password\": password\n              })\n            }).then(function (response) {\n              if (response.status == 400) return response.status;\n              return response.json();\n            }).then(function (data) {\n              return data;\n            })[\"catch\"](function (error) {\n              return error;\n            });\n\n          case 2:\n            newLogin = _context2.sent;\n            return _context2.abrupt(\"return\", newLogin);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _loginRequest.apply(this, arguments);\n}\n\nexport function forgotPassword(_x7) {\n  return _forgotPassword.apply(this, arguments);\n}\n\nfunction _forgotPassword() {\n  _forgotPassword = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(email) {\n    var newLogin;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return fetch(baseConfig.baseURL + '/users/forgotpass/' + email, {\n              method: 'GET',\n              headers: {\n                \"Content-type\": \"application/json\"\n              }\n            }).then(function (response) {\n              return response.json();\n            }).then(function (data) {\n              return data;\n            })[\"catch\"](function (error) {\n              return error;\n            });\n\n          case 2:\n            newLogin = _context3.sent;\n\n            if (!newLogin) {\n              _context3.next = 5;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", newLogin);\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _forgotPassword.apply(this, arguments);\n}\n\nexport function changePassword(_x8, _x9) {\n  return _changePassword.apply(this, arguments);\n}\n\nfunction _changePassword() {\n  _changePassword = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(token, newPassword) {\n    var newLogin;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return fetch(baseConfig.baseURL + '/users/changepassword/' + newPassword, {\n              method: 'GET',\n              headers: {\n                \"Content-type\": \"application/json\",\n                \"Authorization\": \"Bearer \".concat(token)\n              }\n            }).then(function (response) {\n              return response.json();\n            }).then(function (data) {\n              return data;\n            })[\"catch\"](function (error) {\n              return error;\n            });\n\n          case 2:\n            newLogin = _context4.sent;\n\n            if (!newLogin) {\n              _context4.next = 5;\n              break;\n            }\n\n            return _context4.abrupt(\"return\", newLogin);\n\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _changePassword.apply(this, arguments);\n}\n\nexport function submitContact(_x10, _x11, _x12, _x13) {\n  return _submitContact.apply(this, arguments);\n}\n\nfunction _submitContact() {\n  _submitContact = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(name, message, email, cellphone) {\n    var newfetch;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return fetch(baseConfig.baseURL + '/contact', {\n              method: 'POST',\n              headers: {\n                \"Content-type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                \"name\": name,\n                \"message\": message,\n                \"cellphone\": cellphone,\n                \"email\": email\n              })\n            }).then(function (res) {\n              return res.status;\n            })[\"catch\"](function (error) {\n              console.log('Request failed', error);\n            });\n\n          case 2:\n            newfetch = _context5.sent;\n\n            if (!newfetch) {\n              _context5.next = 7;\n              break;\n            }\n\n            return _context5.abrupt(\"return\", newfetch);\n\n          case 7:\n            return _context5.abrupt(\"return\", 404);\n\n          case 8:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _submitContact.apply(this, arguments);\n}\n\nexport function createTask(_x14, _x15, _x16, _x17) {\n  return _createTask.apply(this, arguments);\n}\n\nfunction _createTask() {\n  _createTask = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(objective, status, priority, assignee) {\n    var getCookies, newTask;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            getCookies = cookies.getAll(); // New Login Data request\n\n            _context6.next = 3;\n            return fetch(baseConfig.baseURL + '/tasks', {\n              method: 'POST',\n              headers: {\n                \"Content-type\": \"application/json\",\n                \"Authorization\": \"Bearer \".concat(getCookies.accessToken)\n              },\n              body: JSON.stringify({\n                \"objective\": objective,\n                \"status\": status,\n                \"priority\": priority,\n                \"assignee\": assignee\n              })\n            }).then(function (response) {\n              return response.json();\n            })[\"catch\"](function (error) {\n              return error;\n            });\n\n          case 3:\n            newTask = _context6.sent;\n\n            if (!newTask) {\n              _context6.next = 6;\n              break;\n            }\n\n            return _context6.abrupt(\"return\", newTask);\n\n          case 6:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _createTask.apply(this, arguments);\n}\n\nexport function getTasks(_x18, _x19) {\n  return _getTasks.apply(this, arguments);\n}\n\nfunction _getTasks() {\n  _getTasks = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(limit, token) {\n    var getCookies, newTask;\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            getCookies = cookies.getAll(); // New Login Data request\n\n            _context7.next = 3;\n            return fetch(baseConfig.baseURL + '/tasks?limit=' + limit, {\n              method: 'GET',\n              headers: {\n                \"Content-type\": \"application/json\",\n                \"Authorization\": \"Bearer \".concat(getCookies.accessToken ? getCookies.accessToken : token)\n              }\n            }).then(function (response) {\n              if (response.status == 403) {\n                return 'Not Authorized';\n              }\n\n              return response.json();\n            })[\"catch\"](function (error) {\n              return error;\n            });\n\n          case 3:\n            newTask = _context7.sent;\n\n            if (!newTask) {\n              _context7.next = 6;\n              break;\n            }\n\n            return _context7.abrupt(\"return\", newTask);\n\n          case 6:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _getTasks.apply(this, arguments);\n}\n\nexport function removeTask(_x20) {\n  return _removeTask.apply(this, arguments);\n}\n\nfunction _removeTask() {\n  _removeTask = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(taskId) {\n    var getCookies, newTask;\n    return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            getCookies = cookies.getAll(); // New Login Data request\n\n            _context8.next = 3;\n            return fetch(baseConfig.baseURL + \"/tasks/\".concat(taskId), {\n              method: 'DELETE',\n              headers: {\n                \"Authorization\": \"Bearer \".concat(getCookies.accessToken ? getCookies.accessToken : token)\n              }\n            }).then(function (response) {\n              return response.json();\n            })[\"catch\"](function (error) {\n              return error;\n            });\n\n          case 3:\n            newTask = _context8.sent;\n\n            if (!newTask) {\n              _context8.next = 6;\n              break;\n            }\n\n            return _context8.abrupt(\"return\", newTask);\n\n          case 6:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n  return _removeTask.apply(this, arguments);\n}\n\nexport function updateTaskStatus(_x21, _x22) {\n  return _updateTaskStatus.apply(this, arguments);\n}\n\nfunction _updateTaskStatus() {\n  _updateTaskStatus = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(taskId, newstatus) {\n    var getCookies, newTask;\n    return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            getCookies = cookies.getAll(); // New Login Data request\n\n            _context9.next = 3;\n            return fetch(baseConfig.baseURL + \"/tasks/\".concat(taskId), {\n              method: 'PATCH',\n              headers: {\n                \"Content-type\": \"application/json\",\n                \"Authorization\": \"Bearer \".concat(getCookies.accessToken ? getCookies.accessToken : token)\n              },\n              body: JSON.stringify({\n                \"status\": newstatus\n              })\n            }).then(function (response) {\n              return response.json();\n            })[\"catch\"](function (error) {\n              return error;\n            });\n\n          case 3:\n            newTask = _context9.sent;\n\n            if (!newTask) {\n              _context9.next = 6;\n              break;\n            }\n\n            return _context9.abrupt(\"return\", newTask);\n\n          case 6:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n  return _updateTaskStatus.apply(this, arguments);\n}\n\nexport function searchProjects(_x23) {\n  return _searchProjects.apply(this, arguments);\n}\n\nfunction _searchProjects() {\n  _searchProjects = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(newQuery) {\n    var newSearch;\n    return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            _context10.next = 2;\n            return fetch(baseConfig.baseURL + \"/searchprojects/\" + newQuery, {\n              method: 'GET',\n              headers: {\n                \"Content-type\": \"application/json\"\n              }\n            }).then(function (response) {\n              return response.json();\n            })[\"catch\"](function (error) {\n              return error;\n            });\n\n          case 2:\n            newSearch = _context10.sent;\n\n            if (!newSearch) {\n              _context10.next = 5;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", newSearch);\n\n          case 5:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10);\n  }));\n  return _searchProjects.apply(this, arguments);\n}","map":{"version":3,"sources":["/home/wforte/canvas/SynapseFlash/services/apiservice.js"],"names":["Router","Cookies","jwt_decode","baseConfig","cookies","createProfile","firstname","lastname","email","password","fetch","baseURL","method","headers","body","JSON","stringify","then","response","json","data","console","log","error","loginRequest","status","newLogin","forgotPassword","changePassword","token","newPassword","submitContact","name","message","cellphone","res","newfetch","createTask","objective","priority","assignee","getCookies","getAll","accessToken","newTask","getTasks","limit","removeTask","taskId","updateTaskStatus","newstatus","searchProjects","newQuery","newSearch"],"mappings":"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","sourcesContent":["import Router from 'next/router';\nimport { Cookies } from 'react-cookie';\nimport jwt_decode from 'jwt-decode';\nimport { baseConfig } from './restservice';\n\nconst cookies = new Cookies();\n\nexport async function createProfile(firstname, lastname, email, password) {\n    // Request data to post to createprofile route on rest api\n    fetch(baseConfig.baseURL + '/users', {\n        method: 'POST',\n        headers: {\n            \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            \"firstName\": firstname,\n            \"lastName\": lastname,\n            \"email\": email,\n            \"password\": password\n        })\n    })\n    .then(function(response) {\n        return response.json();\n    })\n    .then(function(data) {\n        console.log('Request succeeded with JSON response', data);\n    })\n    .catch(function(error) {\n        console.log('Request failed', error);\n    });\n}\n\nexport async function loginRequest(email, password) {\n    // New Login Data request\n    const newLogin = await fetch(baseConfig.baseURL + '/auth', {\n        method: 'POST',\n        headers: {\n            \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            \"email\": email,\n            \"password\": password\n        })\n    })\n    .then(function(response) {\n        if(response.status == 400) return response.status\n        return response.json();\n    })\n    .then(function(data) {\n        return data\n    })\n    .catch(function(error) {\n        return error\n    });\n    return newLogin\n}\n\nexport async function forgotPassword(email) {\n    // New Login Data request\n    const newLogin = await fetch(baseConfig.baseURL + '/users/forgotpass/' + email, {\n        method: 'GET',\n        headers: {\n            \"Content-type\": \"application/json\"\n        }\n    })\n    .then(function(response) {\n        return response.json();\n    })\n    .then(function(data) {\n        return data\n    })\n    .catch(function(error) {\n        return error\n    });\n    if(newLogin) {\n        return newLogin\n    }\n}\n\nexport async function changePassword(token, newPassword) {\n    // New Login Data request\n    const newLogin = await fetch(baseConfig.baseURL + '/users/changepassword/' + newPassword, {\n        method: 'GET',\n        headers: {\n            \"Content-type\": \"application/json\",\n            \"Authorization\": `Bearer ${token}`\n        }\n    })\n    .then(function(response) {\n        return response.json();\n    })\n    .then(function(data) {\n        return data\n    })\n    .catch(function(error) {\n        return error\n    });\n    if(newLogin) {\n        return newLogin\n    }\n}\n\nexport async function submitContact(name, message, email, cellphone) {\n    // Request data to post to createprofile route on rest api\n    const newfetch = await fetch(baseConfig.baseURL + '/contact', {\n        method: 'POST',\n        headers: {\n            \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            \"name\": name,\n            \"message\": message,\n            \"cellphone\": cellphone,\n            \"email\": email\n        })\n    })\n    .then(function(res) {\n        return res.status\n    })\n    .catch(function(error) {\n        console.log('Request failed', error);\n    });\n\n    if(newfetch) {\n        return newfetch\n    } else {\n        return 404\n    }\n}\n\nexport async function createTask(objective, status, priority, assignee) {\n    \n    const getCookies = cookies.getAll()\n    // New Login Data request\n    const newTask = await fetch(baseConfig.baseURL + '/tasks', {\n        method: 'POST',\n        headers: {\n            \"Content-type\": \"application/json\",\n            \"Authorization\": `Bearer ${getCookies.accessToken}`\n        },\n        body: JSON.stringify({\n            \"objective\": objective,\n            \"status\": status,\n            \"priority\": priority,\n            \"assignee\": assignee,\n        })\n    })\n    .then(function(response) {\n        return response.json();\n    })\n    .catch(function(error) {\n        return error\n    });\n    if(newTask) {\n        return newTask\n    }\n}\n\nexport async function getTasks(limit, token) {\n    \n    const getCookies = cookies.getAll()\n    // New Login Data request\n    const newTask = await fetch(baseConfig.baseURL + '/tasks?limit=' + limit, {\n        method: 'GET',\n        headers: {\n            \"Content-type\": \"application/json\",\n            \"Authorization\": `Bearer ${getCookies.accessToken ? getCookies.accessToken: token}`\n        }\n    })\n    .then(function(response) {\n        if(response.status == 403) {\n            return 'Not Authorized'\n        }\n        return response.json();\n    })\n    .catch(function(error) {\n        return error\n    });\n    if(newTask) {\n        return newTask\n    }\n}\n\nexport async function removeTask(taskId) {\n    \n    const getCookies = cookies.getAll()\n    // New Login Data request\n    const newTask = await fetch(baseConfig.baseURL + `/tasks/${taskId}`, {\n        method: 'DELETE',\n        headers: {\n            \"Authorization\": `Bearer ${getCookies.accessToken ? getCookies.accessToken: token}`\n        }\n    })\n    .then(function(response) {\n        return response.json();\n    })\n    .catch(function(error) {\n        return error\n    });\n    if(newTask) {\n        return newTask\n    }\n}\n\nexport async function updateTaskStatus(taskId, newstatus) {\n    \n    const getCookies = cookies.getAll()\n    // New Login Data request\n    const newTask = await fetch(baseConfig.baseURL + `/tasks/${taskId}`, {\n        method: 'PATCH',\n        headers: {\n            \"Content-type\": \"application/json\",\n            \"Authorization\": `Bearer ${getCookies.accessToken ? getCookies.accessToken: token}`\n        },\n        body: JSON.stringify({\n            \"status\": newstatus\n        })\n    })\n    .then(function(response) {\n        return response.json();\n    })\n    .catch(function(error) {\n        return error\n    });\n    if(newTask) {\n        return newTask\n    }\n}\n\nexport async function searchProjects(newQuery) {\n    // New Login Data request\n    const newSearch = await fetch(baseConfig.baseURL + `/searchprojects/` + newQuery, {\n        method: 'GET',\n        headers: {\n            \"Content-type\": \"application/json\"\n        },\n    })\n    .then(function(response) {\n        return response.json();\n    })\n    .catch(function(error) {\n        return error\n    });\n    if(newSearch) {\n        return newSearch\n    }\n}\n"]},"metadata":{},"sourceType":"module"}