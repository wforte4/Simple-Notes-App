{"ast":null,"code":"import _regeneratorRuntime from \"/Users/williamforte/Canvas/SynapseFlash/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/williamforte/Canvas/SynapseFlash/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as types from '../types';\nimport { getProjects } from '../../services/projectservice';\nimport { loginRequest, getAllUsers, patchUser } from '../../services/apiservice';\nimport jwt_decode from 'jwt-decode';\nimport Router from 'next/router';\nimport { Cookies } from 'react-cookie';\nimport { getThoughts } from '../../services/thoughtservice';\nvar cookies = new Cookies();\nexport var fetchThoughts = function fetchThoughts(email, auth) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return getThoughts(email, auth);\n\n            case 2:\n              res = _context.sent;\n              console.log(res);\n              dispatch({\n                type: types.GET_THOUGHTS,\n                payload: res.length > 0 ? res : null\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var updateProfile = function updateProfile(userId, token, inputs) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return patchUser(userId, token, inputs);\n\n            case 2:\n              res = _context2.sent;\n              console.log(res);\n              dispatch({\n                update: update\n              });\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var getAllUsersAdmin = function getAllUsersAdmin(token, limit) {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return getAllUsers(token, limit);\n\n            case 2:\n              res = _context3.sent;\n              console.log(res);\n              dispatch({\n                type: types.GET_ALLUSERS,\n                payload: res.length > 0 ? res : null,\n                error: null,\n                errorMessage: null\n              });\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\nexport var signIn = function signIn(email, password) {\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch) {\n      var res, decoded;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return loginRequest(email, password);\n\n            case 2:\n              res = _context4.sent;\n              console.log(res);\n\n              if (!(res === 400)) {\n                _context4.next = 7;\n                break;\n              }\n\n              dispatch({\n                type: types.FAILEDLOGIN,\n                payload: 400,\n                errorMessage: 'Invalid Email or Password'\n              });\n              return _context4.abrupt(\"return\");\n\n            case 7:\n              decoded = jwt_decode(res.accessToken);\n              cookies.set('user', decoded);\n              cookies.set('auth', res);\n              dispatch({\n                type: types.AUTH,\n                payload: res\n              });\n              dispatch({\n                type: types.LOGIN,\n                payload: decoded\n              });\n              _context4.next = 14;\n              return Router.push('/');\n\n            case 14:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function (_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n};\nexport var signOut = function signOut() {\n  return /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              cookies.remove('user');\n              cookies.remove('auth');\n              dispatch({\n                type: types.LOGOUT,\n                payload: null\n              });\n              _context5.next = 5;\n              return Router.push(\"/login\");\n\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function (_x5) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["/Users/williamforte/Canvas/SynapseFlash/store/actions/postAction.js"],"names":["types","getProjects","loginRequest","getAllUsers","patchUser","jwt_decode","Router","Cookies","getThoughts","cookies","fetchThoughts","email","auth","dispatch","res","console","log","type","GET_THOUGHTS","payload","length","updateProfile","userId","token","inputs","update","getAllUsersAdmin","limit","GET_ALLUSERS","error","errorMessage","signIn","password","FAILEDLOGIN","decoded","accessToken","set","AUTH","LOGIN","push","signOut","remove","LOGOUT"],"mappings":"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","sourcesContent":["import * as types from '../types'\nimport { getProjects } from '../../services/projectservice'\nimport { loginRequest, getAllUsers, patchUser } from '../../services/apiservice'\nimport jwt_decode from 'jwt-decode';\nimport Router from 'next/router';\nimport { Cookies } from 'react-cookie';\nimport { getThoughts } from '../../services/thoughtservice';\n\nconst cookies = new Cookies();\n\nexport const fetchThoughts = (email, auth) => async dispatch => {\n    const res = await getThoughts(email, auth)\n    console.log(res)\n    dispatch({\n        type: types.GET_THOUGHTS,\n        payload: res.length > 0 ? res: null\n    })\n}\n\nexport const updateProfile = (userId, token, inputs) => async dispatch => {\n    const res = await patchUser(userId, token, inputs);\n    console.log(res)\n    dispatch({\n        update\n    })\n}\n\nexport const getAllUsersAdmin = (token, limit) => async dispatch => {\n    const res = await getAllUsers(token, limit);\n    console.log(res)\n    dispatch({\n        type: types.GET_ALLUSERS,\n        payload: res.length > 0 ? res: null,\n        error: null,\n        errorMessage: null\n    })\n}\n\nexport const signIn = (email, password) => async dispatch => {\n    const res = await loginRequest(email, password)\n    console.log(res)\n    if(res === 400) {\n        dispatch({\n            type: types.FAILEDLOGIN,\n            payload: 400,\n            errorMessage: 'Invalid Email or Password'\n        })\n        return\n    }\n    const decoded = jwt_decode(res.accessToken)\n    cookies.set('user', decoded)\n    cookies.set('auth', res)\n    dispatch({\n        type: types.AUTH,\n        payload: res\n    })\n    dispatch({\n        type: types.LOGIN,\n        payload: decoded\n    })\n    await Router.push('/')\n}\n\nexport const signOut = () => async dispatch => {\n    cookies.remove('user')\n    cookies.remove('auth')\n    dispatch({\n        type: types.LOGOUT,\n        payload: null\n    })\n    await Router.push(\"/login\");\n}"]},"metadata":{},"sourceType":"module"}