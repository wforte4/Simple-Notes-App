{"ast":null,"code":"import _regeneratorRuntime from \"/Users/williamforte/Canvas/SynapseFlash/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/williamforte/Canvas/SynapseFlash/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { useSelector } from \"react-redux\";\nimport { baseConfig } from '../services/restservice';\nexport function uploadThought(_x, _x2, _x3, _x4) {\n  return _uploadThought.apply(this, arguments);\n}\n\nfunction _uploadThought() {\n  _uploadThought = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(thought, user, mindset, auth) {\n    var newThought;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(auth); // New Login Data request\n\n            _context.next = 3;\n            return fetch(baseConfig.thoughtURL, {\n              method: 'POST',\n              headers: {\n                \"Content-type\": \"application/json\",\n                \"Authorization\": \"Bearer \".concat(auth.accessToken)\n              },\n              body: JSON.stringify({\n                \"thought\": thought,\n                \"user\": user,\n                \"mindset\": mindset\n              })\n            }).then(function (response) {\n              return response.json();\n            })[\"catch\"](function (error) {\n              return error;\n            });\n\n          case 3:\n            newThought = _context.sent;\n\n            if (!newThought) {\n              _context.next = 6;\n              break;\n            }\n\n            return _context.abrupt(\"return\", newThought);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _uploadThought.apply(this, arguments);\n}\n\nexport function getThoughts(_x5, _x6) {\n  return _getThoughts.apply(this, arguments);\n}\n\nfunction _getThoughts() {\n  _getThoughts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(email, auth) {\n    var getThought;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetch(baseConfig.thoughtURL + 'getbyemail/' + email, {\n              method: 'GET',\n              headers: {\n                \"Content-type\": \"application/json\",\n                \"Authorization\": \"Bearer \".concat(auth.accessToken)\n              }\n            }).then(function (response) {\n              return response.json();\n            })[\"catch\"](function (error) {\n              return error;\n            });\n\n          case 2:\n            getThought = _context2.sent;\n\n            if (!getThought) {\n              _context2.next = 5;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", getThought);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getThoughts.apply(this, arguments);\n}","map":null,"metadata":{},"sourceType":"module"}