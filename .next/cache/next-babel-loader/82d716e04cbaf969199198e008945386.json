{"ast":null,"code":"import _regeneratorRuntime from \"/Users/williamforte/Canvas/SynapseFlash/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/williamforte/Canvas/SynapseFlash/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { useSelector } from \"react-redux\";\nimport { baseConfig } from '../services/restservice';\nexport function uploadThought(_x) {\n  return _uploadThought.apply(this, arguments);\n}\n\nfunction _uploadThought() {\n  _uploadThought = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var thought, user, mindset, auth, newThought;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            thought = _ref.thought, user = _ref.user, mindset = _ref.mindset, auth = _ref.auth;\n            _context.next = 3;\n            return fetch(baseConfig.thoughtURL, {\n              method: 'POST',\n              headers: {\n                \"Content-type\": \"application/json\",\n                \"Authorization\": \"Bearer \".concat(auth && auth.accessToken)\n              },\n              body: JSON.stringify({\n                \"thought\": thought,\n                \"user\": user,\n                \"mindset\": mindset\n              })\n            }).then(function (response) {\n              return response.json();\n            })[\"catch\"](function (error) {\n              return error;\n            });\n\n          case 3:\n            newThought = _context.sent;\n\n            if (!newThought) {\n              _context.next = 6;\n              break;\n            }\n\n            return _context.abrupt(\"return\", newThought);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _uploadThought.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/williamforte/Canvas/SynapseFlash/services/thoughtservice.js"],"names":["useSelector","baseConfig","uploadThought","thought","user","mindset","auth","fetch","thoughtURL","method","headers","accessToken","body","JSON","stringify","then","response","json","error","newThought"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,yBAA3B;AAEA,gBAAsBC,aAAtB;AAAA;AAAA;;;4EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8BC,YAAAA,OAA9B,QAA8BA,OAA9B,EAAuCC,IAAvC,QAAuCA,IAAvC,EAA6CC,OAA7C,QAA6CA,OAA7C,EAAsDC,IAAtD,QAAsDA,IAAtD;AAAA;AAAA,mBAEsBC,KAAK,CAACN,UAAU,CAACO,UAAZ,EAAwB;AAClDC,cAAAA,MAAM,EAAE,MAD0C;AAElDC,cAAAA,OAAO,EAAE;AACL,gCAAgB,kBADX;AAEL,kDAA2BJ,IAAI,IAAIA,IAAI,CAACK,WAAxC;AAFK,eAFyC;AAMlDC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjB,2BAAWX,OADM;AAEjB,wBAAQC,IAFS;AAGjB,2BAAWC;AAHM,eAAf;AAN4C,aAAxB,CAAL,CAYxBU,IAZwB,CAYnB,UAASC,QAAT,EAAmB;AACrB,qBAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,aAdwB,WAelB,UAASC,KAAT,EAAgB;AACnB,qBAAOA,KAAP;AACH,aAjBwB,CAFtB;;AAAA;AAEGC,YAAAA,UAFH;;AAAA,iBAoBAA,UApBA;AAAA;AAAA;AAAA;;AAAA,6CAqBQA,UArBR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import { useSelector } from \"react-redux\";\nimport { baseConfig } from '../services/restservice'\n\nexport async function uploadThought({thought, user, mindset, auth}) {\n    // New Login Data request\n    const newThought = await fetch(baseConfig.thoughtURL, {\n        method: 'POST',\n        headers: {\n            \"Content-type\": \"application/json\",\n            \"Authorization\": `Bearer ${auth && auth.accessToken}`\n        },\n        body: JSON.stringify({\n            \"thought\": thought,\n            \"user\": user,\n            \"mindset\": mindset,\n        })\n    })\n    .then(function(response) {\n        return response.json();\n    })\n    .catch(function(error) {\n        return error\n    });\n    if(newThought) {\n        return newThought\n    }\n\n}"]},"metadata":{},"sourceType":"module"}