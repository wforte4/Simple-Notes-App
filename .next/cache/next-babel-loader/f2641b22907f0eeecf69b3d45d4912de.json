{"ast":null,"code":"import _regeneratorRuntime from \"/Users/williamforte/Canvas/SynapseFlash/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/williamforte/Canvas/SynapseFlash/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Router from 'next/router';\nimport { Cookies } from 'react-cookie';\nimport jwt_decode from 'jwt-decode';\nimport { baseConfig } from './restservice';\nvar cookies = new Cookies();\nexport function createProfile(_x) {\n  return _createProfile.apply(this, arguments);\n}\n\nfunction _createProfile() {\n  _createProfile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n    var newUser;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(baseConfig.baseURL + '/users', {\n              method: 'POST',\n              headers: {\n                \"Content-type\": \"application/json\"\n              },\n              body: JSON.stringify(data)\n            }).then(function (response) {\n              return response.json();\n            }).then(function (data) {\n              return data;\n            })[\"catch\"](function (error) {\n              console.log('Request failed', error);\n            });\n\n          case 2:\n            newUser = _context.sent;\n\n            if (!newUser) {\n              _context.next = 5;\n              break;\n            }\n\n            return _context.abrupt(\"return\", newUser);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _createProfile.apply(this, arguments);\n}\n\nexport function loginRequest(_x2, _x3) {\n  return _loginRequest.apply(this, arguments);\n}\n\nfunction _loginRequest() {\n  _loginRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(email, password) {\n    var newLogin;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetch(baseConfig.baseURL + '/auth', {\n              method: 'POST',\n              headers: {\n                \"Content-type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                \"email\": email,\n                \"password\": password\n              })\n            }).then(function (response) {\n              if (response.status == 400) return response.status;\n              return response.json();\n            }).then(function (data) {\n              return data;\n            })[\"catch\"](function (error) {\n              return error;\n            });\n\n          case 2:\n            newLogin = _context2.sent;\n            return _context2.abrupt(\"return\", newLogin);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _loginRequest.apply(this, arguments);\n}\n\nexport function forgotPassword(_x4) {\n  return _forgotPassword.apply(this, arguments);\n}\n\nfunction _forgotPassword() {\n  _forgotPassword = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(email) {\n    var newLogin;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return fetch(baseConfig.baseURL + '/users/forgotpass/' + email, {\n              method: 'GET',\n              headers: {\n                \"Content-type\": \"application/json\"\n              }\n            }).then(function (response) {\n              return response.json();\n            }).then(function (data) {\n              return data;\n            })[\"catch\"](function (error) {\n              return error;\n            });\n\n          case 2:\n            newLogin = _context3.sent;\n\n            if (!newLogin) {\n              _context3.next = 5;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", newLogin);\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _forgotPassword.apply(this, arguments);\n}\n\nexport function changePassword(_x5, _x6) {\n  return _changePassword.apply(this, arguments);\n}\n\nfunction _changePassword() {\n  _changePassword = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(token, newPassword) {\n    var newLogin;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return fetch(baseConfig.baseURL + '/users/changepassword/' + newPassword, {\n              method: 'GET',\n              headers: {\n                \"Content-type\": \"application/json\",\n                \"Authorization\": \"Bearer \".concat(token)\n              }\n            }).then(function (response) {\n              return response.json();\n            }).then(function (data) {\n              return data;\n            })[\"catch\"](function (error) {\n              return error;\n            });\n\n          case 2:\n            newLogin = _context4.sent;\n\n            if (!newLogin) {\n              _context4.next = 5;\n              break;\n            }\n\n            return _context4.abrupt(\"return\", newLogin);\n\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _changePassword.apply(this, arguments);\n}\n\nexport function submitContact(_x7, _x8, _x9, _x10) {\n  return _submitContact.apply(this, arguments);\n}\n\nfunction _submitContact() {\n  _submitContact = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(name, message, email, cellphone) {\n    var newfetch;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return fetch(baseConfig.baseURL + '/contact', {\n              method: 'POST',\n              headers: {\n                \"Content-type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                \"name\": name,\n                \"message\": message,\n                \"cellphone\": cellphone,\n                \"email\": email\n              })\n            }).then(function (res) {\n              return res.status;\n            })[\"catch\"](function (error) {\n              console.log('Request failed', error);\n            });\n\n          case 2:\n            newfetch = _context5.sent;\n\n            if (!newfetch) {\n              _context5.next = 7;\n              break;\n            }\n\n            return _context5.abrupt(\"return\", newfetch);\n\n          case 7:\n            return _context5.abrupt(\"return\", 404);\n\n          case 8:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _submitContact.apply(this, arguments);\n}\n\nexport function patchUser(_x11, _x12, _x13) {\n  return _patchUser.apply(this, arguments);\n}\n\nfunction _patchUser() {\n  _patchUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(userId, token, userData) {\n    var newfetch;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return fetch(baseConfig.baseURL + '/users/' + userId, {\n              method: 'PATCH',\n              headers: {\n                \"Content-type\": \"application/json\",\n                \"Authorization\": \"Bearer \".concat(token)\n              },\n              body: JSON.stringify({\n                userData: userData\n              })\n            }).then(function (response) {\n              console.log(response.status);\n              return response.json();\n            })[\"catch\"](function (error) {\n              console.log('Request failed', error);\n            });\n\n          case 2:\n            newfetch = _context6.sent;\n\n            if (!newfetch) {\n              _context6.next = 7;\n              break;\n            }\n\n            return _context6.abrupt(\"return\", newfetch);\n\n          case 7:\n            return _context6.abrupt(\"return\", 404);\n\n          case 8:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _patchUser.apply(this, arguments);\n}","map":null,"metadata":{},"sourceType":"module"}