{"ast":null,"code":"import _regeneratorRuntime from \"/home/wforte/canvas/SynapseFlash/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/wforte/canvas/SynapseFlash/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Cookies } from 'react-cookie';\nimport { baseConfig } from './restservice';\nvar cookies = new Cookies();\nexport function createProject(_x, _x2, _x3, _x4, _x5) {\n  return _createProject.apply(this, arguments);\n}\n\nfunction _createProject() {\n  _createProject = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(title, body, tags, images, date) {\n    var getCookies, newProject;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            getCookies = cookies.getAll(); // New Login Data request\n\n            _context.next = 3;\n            return fetch(baseConfig.projectURL, {\n              method: 'POST',\n              headers: {\n                \"Content-type\": \"application/json\",\n                \"Authorization\": \"Bearer \".concat(getCookies.accessToken)\n              },\n              body: JSON.stringify({\n                \"title\": title,\n                \"body\": body,\n                \"tags\": tags,\n                \"images\": images,\n                \"date\": date\n              })\n            }).then(function (response) {\n              return response.json();\n            })[\"catch\"](function (error) {\n              return error;\n            });\n\n          case 3:\n            newProject = _context.sent;\n\n            if (!newProject) {\n              _context.next = 6;\n              break;\n            }\n\n            return _context.abrupt(\"return\", newProject);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _createProject.apply(this, arguments);\n}\n\nexport function getProjects(_x6) {\n  return _getProjects.apply(this, arguments);\n}\n\nfunction _getProjects() {\n  _getProjects = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(limit) {\n    var getAllProjects;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetch(baseConfig.projectURL, {\n              method: 'GET',\n              headers: {\n                \"Content-type\": \"application/json\"\n              },\n              query: JSON.stringify({\n                \"limit\": limit\n              })\n            }).then(function (response) {\n              return response.json();\n            })[\"catch\"](function (error) {\n              console.log(error);\n              return 'none';\n            });\n\n          case 2:\n            getAllProjects = _context2.sent;\n\n            if (!getAllProjects) {\n              _context2.next = 5;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", getAllProjects);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getProjects.apply(this, arguments);\n}\n\nexport function getProjectById(_x7) {\n  return _getProjectById.apply(this, arguments);\n}\n\nfunction _getProjectById() {\n  _getProjectById = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id) {\n    var newProject;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return fetch(baseConfig.projectURL + id, {\n              method: 'GET',\n              headers: {\n                \"Content-type\": \"application/json\"\n              }\n            }).then(function (response) {\n              if (response.status == 403) {\n                return 'Not Authorized';\n              }\n\n              return response.json();\n            })[\"catch\"](function (error) {\n              return error;\n            });\n\n          case 2:\n            newProject = _context3.sent;\n\n            if (!newProject) {\n              _context3.next = 5;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", newProject);\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _getProjectById.apply(this, arguments);\n}\n\nexport function removeProject(_x8) {\n  return _removeProject.apply(this, arguments);\n}\n\nfunction _removeProject() {\n  _removeProject = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(projectId) {\n    var getCookies, newProject;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            getCookies = cookies.getAll(); // New Login Data request\n\n            _context4.next = 3;\n            return fetch(baseConfig.projectURL + projectId, {\n              method: 'DELETE',\n              headers: {\n                \"Authorization\": \"Bearer \".concat(getCookies.accessToken ? getCookies.accessToken : token)\n              }\n            }).then(function (response) {\n              return response.json();\n            })[\"catch\"](function (error) {\n              return error;\n            });\n\n          case 3:\n            newProject = _context4.sent;\n\n            if (!newProject) {\n              _context4.next = 6;\n              break;\n            }\n\n            return _context4.abrupt(\"return\", newProject);\n\n          case 6:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _removeProject.apply(this, arguments);\n}\n\nexport function updateProject(_x9, _x10, _x11, _x12, _x13) {\n  return _updateProject.apply(this, arguments);\n}\n\nfunction _updateProject() {\n  _updateProject = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(projectId, title, body, images, tags) {\n    var getCookies, newProject;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            getCookies = cookies.getAll(); // New Login Data request\n\n            _context5.next = 3;\n            return fetch(baseConfig.projectURL + projectId, {\n              method: 'PATCH',\n              headers: {\n                \"Content-type\": \"application/json\",\n                \"Authorization\": \"Bearer \".concat(getCookies.accessToken ? getCookies.accessToken : token)\n              },\n              body: JSON.stringify({\n                title: title,\n                body: body,\n                tags: tags,\n                images: images\n              })\n            }).then(function (response) {\n              return response.json();\n            })[\"catch\"](function (error) {\n              return error;\n            });\n\n          case 3:\n            newProject = _context5.sent;\n\n            if (!newProject) {\n              _context5.next = 6;\n              break;\n            }\n\n            return _context5.abrupt(\"return\", newProject);\n\n          case 6:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _updateProject.apply(this, arguments);\n}","map":{"version":3,"sources":["/home/wforte/canvas/SynapseFlash/services/projectservice.js"],"names":["Cookies","baseConfig","cookies","createProject","title","body","tags","images","date","getCookies","getAll","fetch","projectURL","method","headers","accessToken","JSON","stringify","then","response","json","error","newProject","getProjects","limit","query","console","log","getAllProjects","getProjectById","id","status","removeProject","projectId","token","updateProject"],"mappings":";;AAAA,SAASA,OAAT,QAAwB,cAAxB;AACA,SAASC,UAAT,QAA2B,eAA3B;AAEA,IAAMC,OAAO,GAAG,IAAIF,OAAJ,EAAhB;AAEA,gBAAsBG,aAAtB;AAAA;AAAA;;;4EAAO,iBAA6BC,KAA7B,EAAoCC,IAApC,EAA0CC,IAA1C,EAAgDC,MAAhD,EAAwDC,IAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAEGC,YAAAA,UAFH,GAEgBP,OAAO,CAACQ,MAAR,EAFhB,EAGH;;AAHG;AAAA,mBAIsBC,KAAK,CAACV,UAAU,CAACW,UAAZ,EAAwB;AAClDC,cAAAA,MAAM,EAAE,MAD0C;AAElDC,cAAAA,OAAO,EAAE;AACL,gCAAgB,kBADX;AAEL,kDAA2BL,UAAU,CAACM,WAAtC;AAFK,eAFyC;AAMlDV,cAAAA,IAAI,EAAEW,IAAI,CAACC,SAAL,CAAe;AACjB,yBAASb,KADQ;AAEjB,wBAAQC,IAFS;AAGjB,wBAAQC,IAHS;AAIjB,0BAAUC,MAJO;AAKjB,wBAAQC;AALS,eAAf;AAN4C,aAAxB,CAAL,CAcxBU,IAdwB,CAcnB,UAASC,QAAT,EAAmB;AACrB,qBAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,aAhBwB,WAiBlB,UAASC,KAAT,EAAgB;AACnB,qBAAOA,KAAP;AACH,aAnBwB,CAJtB;;AAAA;AAIGC,YAAAA,UAJH;;AAAA,iBAwBAA,UAxBA;AAAA;AAAA;AAAA;;AAAA,6CAyBQA,UAzBR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AA6BP,gBAAsBC,WAAtB;AAAA;AAAA;;;0EAAO,kBAA2BC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAE0Bb,KAAK,CAACV,UAAU,CAACW,UAAZ,EAAyB;AACvDC,cAAAA,MAAM,EAAE,KAD+C;AAEvDC,cAAAA,OAAO,EAAE;AACL,gCAAgB;AADX,eAF8C;AAKvDW,cAAAA,KAAK,EAAET,IAAI,CAACC,SAAL,CAAe;AAClB,yBAASO;AADS,eAAf;AALgD,aAAzB,CAAL,CAS5BN,IAT4B,CASvB,UAASC,QAAT,EAAmB;AACrB,qBAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,aAX4B,WAYtB,UAASC,KAAT,EAAgB;AACnBK,cAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACA,qBAAO,MAAP;AACH,aAf4B,CAF1B;;AAAA;AAEGO,YAAAA,cAFH;;AAAA,iBAkBAA,cAlBA;AAAA;AAAA;AAAA;;AAAA,8CAmBQA,cAnBR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAuBP,gBAAsBC,cAAtB;AAAA;AAAA;;;6EAAO,kBAA8BC,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEsBnB,KAAK,CAACV,UAAU,CAACW,UAAX,GAAwBkB,EAAzB,EAA6B;AACvDjB,cAAAA,MAAM,EAAE,KAD+C;AAEvDC,cAAAA,OAAO,EAAE;AACL,gCAAgB;AADX;AAF8C,aAA7B,CAAL,CAMxBI,IANwB,CAMnB,UAASC,QAAT,EAAmB;AACrB,kBAAGA,QAAQ,CAACY,MAAT,IAAmB,GAAtB,EAA2B;AACvB,uBAAO,gBAAP;AACH;;AACD,qBAAOZ,QAAQ,CAACC,IAAT,EAAP;AACH,aAXwB,WAYlB,UAASC,KAAT,EAAgB;AACnB,qBAAOA,KAAP;AACH,aAdwB,CAFtB;;AAAA;AAEGC,YAAAA,UAFH;;AAAA,iBAiBAA,UAjBA;AAAA;AAAA;AAAA;;AAAA,8CAkBQA,UAlBR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAsBP,gBAAsBU,aAAtB;AAAA;AAAA;;;4EAAO,kBAA6BC,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAEGxB,YAAAA,UAFH,GAEgBP,OAAO,CAACQ,MAAR,EAFhB,EAGH;;AAHG;AAAA,mBAIsBC,KAAK,CAACV,UAAU,CAACW,UAAX,GAAwBqB,SAAzB,EAAoC;AAC9DpB,cAAAA,MAAM,EAAE,QADsD;AAE9DC,cAAAA,OAAO,EAAE;AACL,kDAA2BL,UAAU,CAACM,WAAX,GAAyBN,UAAU,CAACM,WAApC,GAAiDmB,KAA5E;AADK;AAFqD,aAApC,CAAL,CAMxBhB,IANwB,CAMnB,UAASC,QAAT,EAAmB;AACrB,qBAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,aARwB,WASlB,UAASC,KAAT,EAAgB;AACnB,qBAAOA,KAAP;AACH,aAXwB,CAJtB;;AAAA;AAIGC,YAAAA,UAJH;;AAAA,iBAgBAA,UAhBA;AAAA;AAAA;AAAA;;AAAA,8CAiBQA,UAjBR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAqBP,gBAAsBa,aAAtB;AAAA;AAAA;;;4EAAO,kBAA6BF,SAA7B,EAAwC7B,KAAxC,EAA+CC,IAA/C,EAAqDE,MAArD,EAA6DD,IAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAEGG,YAAAA,UAFH,GAEgBP,OAAO,CAACQ,MAAR,EAFhB,EAGH;;AAHG;AAAA,mBAIsBC,KAAK,CAACV,UAAU,CAACW,UAAX,GAAwBqB,SAAzB,EAAoC;AAC9DpB,cAAAA,MAAM,EAAE,OADsD;AAE9DC,cAAAA,OAAO,EAAE;AACL,gCAAgB,kBADX;AAEL,kDAA2BL,UAAU,CAACM,WAAX,GAAyBN,UAAU,CAACM,WAApC,GAAiDmB,KAA5E;AAFK,eAFqD;AAM9D7B,cAAAA,IAAI,EAAEW,IAAI,CAACC,SAAL,CAAe;AAAEb,gBAAAA,KAAK,EAAEA,KAAT;AAAgBC,gBAAAA,IAAI,EAAEA,IAAtB;AAA4BC,gBAAAA,IAAI,EAAEA,IAAlC;AAAwCC,gBAAAA,MAAM,EAAEA;AAAhD,eAAf;AANwD,aAApC,CAAL,CAQxBW,IARwB,CAQnB,UAASC,QAAT,EAAmB;AACrB,qBAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,aAVwB,WAWlB,UAASC,KAAT,EAAgB;AACnB,qBAAOA,KAAP;AACH,aAbwB,CAJtB;;AAAA;AAIGC,YAAAA,UAJH;;AAAA,iBAkBAA,UAlBA;AAAA;AAAA;AAAA;;AAAA,8CAmBQA,UAnBR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import { Cookies } from 'react-cookie';\nimport { baseConfig } from './restservice' \n\nconst cookies = new Cookies();\n\nexport async function createProject(title, body, tags, images, date) {\n    \n    const getCookies = cookies.getAll()\n    // New Login Data request\n    const newProject = await fetch(baseConfig.projectURL, {\n        method: 'POST',\n        headers: {\n            \"Content-type\": \"application/json\",\n            \"Authorization\": `Bearer ${getCookies.accessToken}`\n        },\n        body: JSON.stringify({\n            \"title\": title,\n            \"body\": body,\n            \"tags\": tags,\n            \"images\": images,\n            \"date\": date\n        })\n    })\n    .then(function(response) {\n        return response.json();\n    })\n    .catch(function(error) {\n        return error\n    });\n    if(newProject) {\n        return newProject\n    }\n}\n\nexport async function getProjects(limit) {\n    // New Login Data request\n    const getAllProjects = await fetch(baseConfig.projectURL , {\n        method: 'GET',\n        headers: {\n            \"Content-type\": \"application/json\"\n        },\n        query: JSON.stringify({\n            \"limit\": limit\n        })\n    })\n    .then(function(response) {\n        return response.json();\n    })\n    .catch(function(error) {\n        console.log(error)\n        return 'none'\n    });\n    if(getAllProjects) {\n        return getAllProjects\n    }\n}\n\nexport async function getProjectById(id) {\n    // New Login Data request\n    const newProject = await fetch(baseConfig.projectURL + id, {\n        method: 'GET',\n        headers: {\n            \"Content-type\": \"application/json\"\n        }\n    })\n    .then(function(response) {\n        if(response.status == 403) {\n            return 'Not Authorized'\n        }\n        return response.json();\n    })\n    .catch(function(error) {\n        return error\n    });\n    if(newProject) {\n        return newProject\n    }\n}\n\nexport async function removeProject(projectId) {\n    \n    const getCookies = cookies.getAll()\n    // New Login Data request\n    const newProject = await fetch(baseConfig.projectURL + projectId, {\n        method: 'DELETE',\n        headers: {\n            \"Authorization\": `Bearer ${getCookies.accessToken ? getCookies.accessToken: token}`\n        }\n    })\n    .then(function(response) {\n        return response.json();\n    })\n    .catch(function(error) {\n        return error\n    });\n    if(newProject) {\n        return newProject\n    }\n}\n\nexport async function updateProject(projectId, title, body, images, tags) {\n    \n    const getCookies = cookies.getAll()\n    // New Login Data request\n    const newProject = await fetch(baseConfig.projectURL + projectId, {\n        method: 'PATCH',\n        headers: {\n            \"Content-type\": \"application/json\",\n            \"Authorization\": `Bearer ${getCookies.accessToken ? getCookies.accessToken: token}`\n        },\n        body: JSON.stringify({ title: title, body: body, tags: tags, images: images})\n    })\n    .then(function(response) {\n        return response.json();\n    })\n    .catch(function(error) {\n        return error\n    });\n    if(newProject) {\n        return newProject\n    }\n}"]},"metadata":{},"sourceType":"module"}