{"ast":null,"code":"import * as types from '../types';\nimport { getProjects } from '../../services/projectservice';\nimport { loginRequest } from '../../services/apiservice';\nimport jwt_decode from 'jwt-decode';\nimport Router from 'next/router';\nimport { Cookies } from 'react-cookie';\nconst cookies = new Cookies();\nexport const fetchProjects = () => async dispatch => {\n  const res = await getProjects(50);\n  dispatch({\n    type: types.GET_PROJECTS,\n    payload: res\n  });\n};\nexport const signIn = (email, password) => async dispatch => {\n  const res = await loginRequest(email, password);\n  console.log(res);\n\n  if (typeof res === 'error') {\n    dispatch({\n      type: types.LOGIN,\n      payload: null,\n      loading: false,\n      error: res\n    });\n    return;\n  }\n\n  const decoded = jwt_decode(res.accessToken);\n  cookies.set('user', decoded);\n  cookies.set('auth', res);\n  dispatch({\n    type: types.AUTH,\n    payload: res\n  });\n  dispatch({\n    type: types.LOGIN,\n    payload: decoded\n  });\n  await Router.push('/');\n};\nexport const signOut = () => async dispatch => {\n  cookies.remove('user');\n  cookies.remove('auth');\n  dispatch({\n    type: types.LOGOUT,\n    payload: null\n  });\n};","map":{"version":3,"sources":["/Users/williamforte/Canvas/SynapseFlash/store/actions/postAction.js"],"names":["types","getProjects","loginRequest","jwt_decode","Router","Cookies","cookies","fetchProjects","dispatch","res","type","GET_PROJECTS","payload","signIn","email","password","console","log","LOGIN","loading","error","decoded","accessToken","set","AUTH","push","signOut","remove","LOGOUT"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,UAAvB;AACA,SAASC,WAAT,QAA4B,+BAA5B;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,OAAT,QAAwB,cAAxB;AAEA,MAAMC,OAAO,GAAG,IAAID,OAAJ,EAAhB;AAEA,OAAO,MAAME,aAAa,GAAG,MAAM,MAAMC,QAAN,IAAkB;AACjD,QAAMC,GAAG,GAAG,MAAMR,WAAW,CAAC,EAAD,CAA7B;AACAO,EAAAA,QAAQ,CAAC;AACLE,IAAAA,IAAI,EAAEV,KAAK,CAACW,YADP;AAELC,IAAAA,OAAO,EAAEH;AAFJ,GAAD,CAAR;AAIH,CANM;AAQP,OAAO,MAAMI,MAAM,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAMP,QAAN,IAAkB;AACzD,QAAMC,GAAG,GAAG,MAAMP,YAAY,CAACY,KAAD,EAAQC,QAAR,CAA9B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYR,GAAZ;;AACA,MAAG,OAAOA,GAAP,KAAe,OAAlB,EAA2B;AACvBD,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEV,KAAK,CAACkB,KADP;AAELN,MAAAA,OAAO,EAAE,IAFJ;AAGLO,MAAAA,OAAO,EAAE,KAHJ;AAILC,MAAAA,KAAK,EAAEX;AAJF,KAAD,CAAR;AAMA;AACH;;AACD,QAAMY,OAAO,GAAGlB,UAAU,CAACM,GAAG,CAACa,WAAL,CAA1B;AACAhB,EAAAA,OAAO,CAACiB,GAAR,CAAY,MAAZ,EAAoBF,OAApB;AACAf,EAAAA,OAAO,CAACiB,GAAR,CAAY,MAAZ,EAAoBd,GAApB;AACAD,EAAAA,QAAQ,CAAC;AACLE,IAAAA,IAAI,EAAEV,KAAK,CAACwB,IADP;AAELZ,IAAAA,OAAO,EAAEH;AAFJ,GAAD,CAAR;AAIAD,EAAAA,QAAQ,CAAC;AACLE,IAAAA,IAAI,EAAEV,KAAK,CAACkB,KADP;AAELN,IAAAA,OAAO,EAAES;AAFJ,GAAD,CAAR;AAIA,QAAMjB,MAAM,CAACqB,IAAP,CAAY,GAAZ,CAAN;AACH,CAxBM;AA0BP,OAAO,MAAMC,OAAO,GAAG,MAAM,MAAMlB,QAAN,IAAkB;AAC3CF,EAAAA,OAAO,CAACqB,MAAR,CAAe,MAAf;AACArB,EAAAA,OAAO,CAACqB,MAAR,CAAe,MAAf;AACAnB,EAAAA,QAAQ,CAAC;AACLE,IAAAA,IAAI,EAAEV,KAAK,CAAC4B,MADP;AAELhB,IAAAA,OAAO,EAAE;AAFJ,GAAD,CAAR;AAIH,CAPM","sourcesContent":["import * as types from '../types'\nimport { getProjects } from '../../services/projectservice'\nimport { loginRequest } from '../../services/apiservice'\nimport jwt_decode from 'jwt-decode';\nimport Router from 'next/router';\nimport { Cookies } from 'react-cookie';\n\nconst cookies = new Cookies();\n\nexport const fetchProjects = () => async dispatch => {\n    const res = await getProjects(50)\n    dispatch({\n        type: types.GET_PROJECTS,\n        payload: res\n    })\n}\n\nexport const signIn = (email, password) => async dispatch => {\n    const res = await loginRequest(email, password)\n    console.log(res)\n    if(typeof res === 'error') {\n        dispatch({\n            type: types.LOGIN,\n            payload: null,\n            loading: false,\n            error: res\n        })\n        return\n    }\n    const decoded = jwt_decode(res.accessToken)\n    cookies.set('user', decoded)\n    cookies.set('auth', res)\n    dispatch({\n        type: types.AUTH,\n        payload: res\n    })\n    dispatch({\n        type: types.LOGIN,\n        payload: decoded\n    })\n    await Router.push('/')\n}\n\nexport const signOut = () => async dispatch => {\n    cookies.remove('user')\n    cookies.remove('auth')\n    dispatch({\n        type: types.LOGOUT,\n        payload: null\n    })\n}"]},"metadata":{},"sourceType":"module"}