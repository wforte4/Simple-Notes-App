{"ast":null,"code":"import _regeneratorRuntime from \"/Users/williamforte/Canvas/SynapseFlash/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/williamforte/Canvas/SynapseFlash/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { useSelector } from \"react-redux\";\nimport { baseConfig } from '../services/restservice';\nexport function uploadThought(_x, _x2, _x3, _x4) {\n  return _uploadThought.apply(this, arguments);\n}\n\nfunction _uploadThought() {\n  _uploadThought = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(thought, user, mindset, auth) {\n    var newThought;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(auth); // New Login Data request\n\n            _context.next = 3;\n            return fetch(baseConfig.thoughtURL, {\n              method: 'POST',\n              headers: {\n                \"Content-type\": \"application/json\",\n                \"Authorization\": \"Bearer \".concat(auth.accessToken)\n              },\n              body: JSON.stringify({\n                \"thought\": thought,\n                \"user\": user,\n                \"mindset\": mindset\n              })\n            }).then(function (response) {\n              return response.json();\n            })[\"catch\"](function (error) {\n              return error;\n            });\n\n          case 3:\n            newThought = _context.sent;\n\n            if (!newThought) {\n              _context.next = 6;\n              break;\n            }\n\n            return _context.abrupt(\"return\", newThought);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _uploadThought.apply(this, arguments);\n}\n\nexport function getThoughts(_x5, _x6) {\n  return _getThoughts.apply(this, arguments);\n}\n\nfunction _getThoughts() {\n  _getThoughts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(email, auth) {\n    var newThought;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetch(baseConfig.thoughtURL + 'getbyemail', {\n              method: 'POST',\n              headers: {\n                \"Content-type\": \"application/json\",\n                \"Authorization\": \"Bearer \".concat(auth.accessToken)\n              },\n              body: JSON.stringify({\n                \"thought\": thought,\n                \"user\": user,\n                \"mindset\": mindset\n              })\n            }).then(function (response) {\n              return response.json();\n            })[\"catch\"](function (error) {\n              return error;\n            });\n\n          case 2:\n            newThought = _context2.sent;\n\n            if (!newThought) {\n              _context2.next = 5;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", newThought);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getThoughts.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/williamforte/Canvas/SynapseFlash/services/thoughtservice.js"],"names":["useSelector","baseConfig","uploadThought","thought","user","mindset","auth","console","log","fetch","thoughtURL","method","headers","accessToken","body","JSON","stringify","then","response","json","error","newThought","getThoughts","email"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,yBAA3B;AAEA,gBAAsBC,aAAtB;AAAA;AAAA;;;4EAAO,iBAA6BC,OAA7B,EAAsCC,IAAtC,EAA4CC,OAA5C,EAAqDC,IAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AACHC,YAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EADG,CAEH;;AAFG;AAAA,mBAGsBG,KAAK,CAACR,UAAU,CAACS,UAAZ,EAAwB;AAClDC,cAAAA,MAAM,EAAE,MAD0C;AAElDC,cAAAA,OAAO,EAAE;AACL,gCAAgB,kBADX;AAEL,kDAA2BN,IAAI,CAACO,WAAhC;AAFK,eAFyC;AAMlDC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjB,2BAAWb,OADM;AAEjB,wBAAQC,IAFS;AAGjB,2BAAWC;AAHM,eAAf;AAN4C,aAAxB,CAAL,CAYxBY,IAZwB,CAYnB,UAASC,QAAT,EAAmB;AACrB,qBAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,aAdwB,WAelB,UAASC,KAAT,EAAgB;AACnB,qBAAOA,KAAP;AACH,aAjBwB,CAHtB;;AAAA;AAGGC,YAAAA,UAHH;;AAAA,iBAqBAA,UArBA;AAAA;AAAA;AAAA;;AAAA,6CAsBQA,UAtBR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AA2BP,gBAAsBC,WAAtB;AAAA;AAAA;;;0EAAO,kBAA2BC,KAA3B,EAAkCjB,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEsBG,KAAK,CAACR,UAAU,CAACS,UAAX,GAAwB,YAAzB,EAAuC;AACjEC,cAAAA,MAAM,EAAE,MADyD;AAEjEC,cAAAA,OAAO,EAAE;AACL,gCAAgB,kBADX;AAEL,kDAA2BN,IAAI,CAACO,WAAhC;AAFK,eAFwD;AAMjEC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjB,2BAAWb,OADM;AAEjB,wBAAQC,IAFS;AAGjB,2BAAWC;AAHM,eAAf;AAN2D,aAAvC,CAAL,CAYxBY,IAZwB,CAYnB,UAASC,QAAT,EAAmB;AACrB,qBAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,aAdwB,WAelB,UAASC,KAAT,EAAgB;AACnB,qBAAOA,KAAP;AACH,aAjBwB,CAFtB;;AAAA;AAEGC,YAAAA,UAFH;;AAAA,iBAoBAA,UApBA;AAAA;AAAA;AAAA;;AAAA,8CAqBQA,UArBR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import { useSelector } from \"react-redux\";\nimport { baseConfig } from '../services/restservice'\n\nexport async function uploadThought(thought, user, mindset, auth) {\n    console.log(auth)\n    // New Login Data request\n    const newThought = await fetch(baseConfig.thoughtURL, {\n        method: 'POST',\n        headers: {\n            \"Content-type\": \"application/json\",\n            \"Authorization\": `Bearer ${auth.accessToken}`\n        },\n        body: JSON.stringify({\n            \"thought\": thought,\n            \"user\": user,\n            \"mindset\": mindset,\n        })\n    })\n    .then(function(response) {\n        return response.json();\n    })\n    .catch(function(error) {\n        return error\n    });\n    if(newThought) {\n        return newThought\n    }\n\n}\n\nexport async function getThoughts(email, auth) {\n    // New Login Data request\n    const newThought = await fetch(baseConfig.thoughtURL + 'getbyemail', {\n        method: 'POST',\n        headers: {\n            \"Content-type\": \"application/json\",\n            \"Authorization\": `Bearer ${auth.accessToken}`\n        },\n        body: JSON.stringify({\n            \"thought\": thought,\n            \"user\": user,\n            \"mindset\": mindset,\n        })\n    })\n    .then(function(response) {\n        return response.json();\n    })\n    .catch(function(error) {\n        return error\n    });\n    if(newThought) {\n        return newThought\n    }\n\n}"]},"metadata":{},"sourceType":"module"}