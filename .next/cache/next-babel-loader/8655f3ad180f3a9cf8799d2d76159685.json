{"ast":null,"code":"import _regeneratorRuntime from \"/Users/williamforte/Canvas/SynapseFlash/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/williamforte/Canvas/SynapseFlash/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as types from '../types';\nimport { getProjects } from '../../services/projectservice';\nimport { loginRequest } from '../../services/apiservice';\nimport jwt_decode from 'jwt-decode';\nimport Router from 'next/router';\nimport { Cookies } from 'react-cookie';\nimport { getThoughts } from '../../services/thoughtservice';\nvar cookies = new Cookies();\nexport var fetchThoughts = function fetchThoughts(email, auth) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return getThoughts(email, auth);\n\n            case 2:\n              res = _context.sent;\n              console.log(res);\n              dispatch({\n                type: types.GET_THOUGHTS,\n                payload: res.length > 0 ? res : null\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var signIn = function signIn(email, password) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var res, decoded;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return loginRequest(email, password);\n\n            case 2:\n              res = _context2.sent;\n              console.log(res);\n\n              if (!(res === 400)) {\n                _context2.next = 7;\n                break;\n              }\n\n              dispatch({\n                type: types.FAILEDLOGIN,\n                payload: 400,\n                errorMessage: 'Invalid Email or Password'\n              });\n              return _context2.abrupt(\"return\");\n\n            case 7:\n              decoded = jwt_decode(res.accessToken);\n              cookies.set('user', decoded);\n              cookies.set('auth', res);\n              dispatch({\n                type: types.AUTH,\n                payload: res\n              });\n              dispatch({\n                type: types.LOGIN,\n                payload: decoded\n              });\n              _context2.next = 14;\n              return Router.push('/');\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var signOut = function signOut() {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              cookies.remove('user');\n              cookies.remove('auth');\n              dispatch({\n                type: types.LOGOUT,\n                payload: null\n              });\n              _context3.next = 5;\n              return Router.push(\"/login\");\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};","map":null,"metadata":{},"sourceType":"module"}